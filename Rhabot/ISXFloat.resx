<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="cmdPause.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="cmdPause.FlatStyle" type="System.Windows.Forms.FlatStyle, System.Windows.Forms">
    <value>Popup</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdPause.Location" type="System.Drawing.Point, System.Drawing">
    <value>15, 74</value>
  </data>
  <data name="cmdPause.Size" type="System.Drawing.Size, System.Drawing">
    <value>75, 23</value>
  </data>
  <assembly alias="mscorlib" name="mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="cmdPause.TabIndex" type="System.Int32, mscorlib">
    <value>0</value>
  </data>
  <data name="cmdPause.Text" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="&gt;&gt;cmdPause.Name" xml:space="preserve">
    <value>cmdPause</value>
  </data>
  <data name="&gt;&gt;cmdPause.Type" xml:space="preserve">
    <value>System.Windows.Forms.Button, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;cmdPause.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;cmdPause.ZOrder" xml:space="preserve">
    <value>2</value>
  </data>
  <metadata name="cmdStop.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="cmdStop.FlatStyle" type="System.Windows.Forms.FlatStyle, System.Windows.Forms">
    <value>Popup</value>
  </data>
  <data name="cmdStop.Location" type="System.Drawing.Point, System.Drawing">
    <value>111, 74</value>
  </data>
  <data name="cmdStop.Size" type="System.Drawing.Size, System.Drawing">
    <value>75, 23</value>
  </data>
  <data name="cmdStop.TabIndex" type="System.Int32, mscorlib">
    <value>1</value>
  </data>
  <data name="cmdStop.Text" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="&gt;&gt;cmdStop.Name" xml:space="preserve">
    <value>cmdStop</value>
  </data>
  <data name="&gt;&gt;cmdStop.Type" xml:space="preserve">
    <value>System.Windows.Forms.Button, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;cmdStop.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;cmdStop.ZOrder" xml:space="preserve">
    <value>1</value>
  </data>
  <metadata name="lblDebug.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="lblDebug.Location" type="System.Drawing.Point, System.Drawing">
    <value>15, 1</value>
  </data>
  <data name="lblDebug.Size" type="System.Drawing.Size, System.Drawing">
    <value>171, 66</value>
  </data>
  <data name="lblDebug.TabIndex" type="System.Int32, mscorlib">
    <value>2</value>
  </data>
  <data name="&gt;&gt;lblDebug.Name" xml:space="preserve">
    <value>lblDebug</value>
  </data>
  <data name="&gt;&gt;lblDebug.Type" xml:space="preserve">
    <value>Rhabot.Threaded_Controls.ThreadLabel, Rhabot, Version=1.0.61.0, Culture=neutral, PublicKeyToken=null</value>
  </data>
  <data name="&gt;&gt;lblDebug.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;lblDebug.ZOrder" xml:space="preserve">
    <value>0</value>
  </data>
  <metadata name="$this.Localizable" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="$this.AutoScaleDimensions" type="System.Drawing.SizeF, System.Drawing">
    <value>6, 13</value>
  </data>
  <data name="$this.ClientSize" type="System.Drawing.Size, System.Drawing">
    <value>198, 105</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAFhYWABwcHABCQkIAZmZmAHd3dwApKSkAIiIiADMzMwBNTU0AVVVVAICAgACZmZkAlpaWAIaG
        hgCkoKAAOTk5AMDAwAD///8A8fHxANfX1wCysrIAX19fAOrq6gAzMzMA3d3dANfX1wDW5+cEkKmtBAD/
        MwQAAGYEAACZBAAAzAQAMwAEADMzBAAzZgQAM5kEADPMBAAz/wQAZgAEAGYzBABmZgQAZpkEAGbMBABm
        /wQAmQAEAJkzBACZZgQAmZkEAJnMBACZ/wQAzAAEAMwzBADMZgQAzJkEAMzMBADM/wQA/2YEAP+ZBAD/
        zAQz/wAE/wAzBDMAZgQzAJkEMwDMBDMA/wT/MwAEMzMzBDMzZgQzM5kEMzPMBDMz/wQzZgAEM2YzBDNm
        ZgQzZpkEM2bMBDNm/wQzmQAEM5kzBDOZZgQzmZkEM5nMBDOZ/wQzzAAEM8wzBDPMZgQzzJkEM8zMBDPM
        /wQz/zMEM/9mBDP/mQQz/8wEM///BGYAAARmADMEZgBmBGYAmQRmAMwEZgD/BGYzAARmMzMEZjNmBGYz
        mQRmM8wEZjP/BGZmAARmZjMEZmZmBGZmmQRmZswEZpkABGaZMwRmmWYEZpmZBGaZzARmmf8EZswABGbM
        MwRmzJkEZszMBGbM/wRm/wAEZv8zBGb/mQRm/8wEzAD/BP8AzASZmQAEmTOZBJkAmQSZAMwEmQAABJkz
        MwSZAGYEmTPMBJkA/wSZZgAEmWYzBJkzZgSZZpkEmWbMBJkz/wSZmTMEmZlmBJmZmQSZmcwEmZn/BJnM
        AASZzDMEZsxmBJnMmQSZzMwEmcz/BJn/AASZ/zMEmcxmBJn/mQSZ/8wEmf//BMwAAASZADMEzABmBMwA
        mQTMAMwEmTMABMwzMwTMM2YEzDOZBMwzzATMM/8EzGYABMxmMwSZZmYEzGaZBMxmzASZZv8EzJkABMyZ
        MwTMmWYEzJmZBMyZzATMmf8EzMwABMzMMwTMzGYEzMyZBMzMzATMzP8EzP8ABMz/MwSZ/2YEzP+ZBMz/
        zATM//8EzAAzBP8AZgT/AJkEzDMABP8zMwT/M2YE/zOZBP8zzAT/M/8E/2YABP9mMwTMZmYE/2aZBP9m
        zATMZv8E/5kABP+ZMwT/mWYE/5mZBP+ZzAT/mf8E/8wABP/MMwT/zGYE/8yZBP/MzAT/zP8E//8zBMz/
        ZgT//5kE///MBGZm/wRm/2YEZv//BP9mZgT/Zv8E//9mBCEApQRfX18Ed3d3BIaGhgSWlpYEy8vLBLKy
        sgTX19cE3d3dBOPj4wTq6uoE8fHxBPj4+ATw+/8ApKCgAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQICCBAQBgcAAAAAAAAAAAAAAAAAAAAAAAAAAAYHAAAB
        BwgJCgoJBQoBAAAAAAAAAAAAAAAAAAAAAAACAQAAAAABBgoKCgkLDAEAAAAAAAAAAAAAAAAAAAAAAAYI
        AgAAAAABEAkKFg0FAgAAAAAAAAAAAAgAAAAAAAAAAQMKCAEAAAAAAQEHCAEBBwEAAAAAAAAAAAgAAAAA
        AAABAwoKCQgBAAAAAAAAAAAAAQEAAAAAAAAAAAgAAAAAAAYDCgoKCgkQBwEAAAAAAAAABwAAAAAAAAAA
        EAgBAAABBgoKCgoKCgoKCQQFCgMICAoWAAABAAAAAAABEAkQEAcIAwoKCgoKCgkKDg8PDwwPDgkAAAAA
        AAAAAAAAAAgJCAgICQkJCgoKCQoODA0NDQwFAQAAAAAAAAAAAAAAABAICAgJFgoKAwkJCg4PDQ0NDQoA
        AAAAAQAAAAAAAAAACAgICQkKCwUKCgMWDg0NDg0LBwAAAAABAAAAAAAAAAAABAwRFQoJBAQFBQsFDgsF
        DQUIAAAAAAEAAAAAAAAAAAEVEhISDwkJCQoFDQ4NDQ0ODQMAAAAAAgAAAAAAAAAABxESEhIUCQoKCQUR
        FQ0NDQsNCAAAAAAAAAAAAAAAAAABDhISEg8JCgkKERITEQ0LDQ4HAAAAAAAAAAAAAAAAAAAQDREMCgkK
        CQUSEhISDwQKCAEAAQAAAAAAAAAAAQAAAAEQCgkJCgoJBRISEhIECQkIAAAAAAAAAAAAAAAAAAAAARAJ
        CgoKCgkEERISERAICAgJCAAAAAAAAAAAAAAAAAAABwoKCgoJCg4NDw8FAgAAAAgJCAAAAAAAAAAAAAAA
        AAAABgoKCQoLDA0MCwEAAAAAAAEICAAAAAAAAAAAAAAAAAAABgkKCwwNDA4CAAAAAAAAAAAACAAAAAAA
        AAAAAAAAAAAAAgMEBQUEBgAAAAAABwAAAAAACAAAAAAAAAAAAAAAAAAAAAECAgEAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP//////4Af//4AB//4AAP/8AAB/+AAAP/AAAB/gAAAPYAAAD4AAAAeAAAADgAAAA4AA
        AAOAAAADAAAAAQAAAAEAAAABAAAAAQAAAAGAAAADgAAAA4AAAAOAAAADwAAAB+AAAA/gAAAH8AAAG/gA
        AD/8AAB//wAB//+AA///+D//
</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>ISX Rhabot Control</value>
  </data>
  <data name="&gt;&gt;$this.Name" xml:space="preserve">
    <value>ISXFloat</value>
  </data>
  <data name="&gt;&gt;$this.Type" xml:space="preserve">
    <value>System.Windows.Forms.Form, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
</root>