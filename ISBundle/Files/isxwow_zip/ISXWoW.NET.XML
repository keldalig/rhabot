<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ISXWoW.NET</name>
    </assembly>
    <members>
        <member name="T:ISXWoW.WoWUI.Frames.RealmWizardUI">
            <summary>
            The realm selection frame
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.UIFrame">
            <summary>
            The base UI class, Frame. This is used throughout the UI system and cannot be instantiated except from children
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.UIFrame.LuaReset">
            <summary>
            Target variable for the global lua reset function
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.UIFrame.isxwow">
            <summary>
            isxwow instance to use for all frames
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.UIFrame._Name">
            <summary>
            The current frame name
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.UIFrame.AttachedCount">
            <summary>
            The number of created frame objects
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.UIFrame.LuaEventID">
            <summary>
            The event ID for WoW:Lua Reset
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.UIFrame.LuaAdded">
            <summary>
            Bool to control if we have already added our functions or not
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.UIFrame.#ctor(System.String)">
            <summary>
            base constructor, all inherited classes should call this passing their name
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:ISXWoW.WoWUI.UIFrame.Finalize">
            <summary>
            destructor
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.UIFrame.ResetFrames">
            <summary>
            Use this function if you ever unload, or better said, reload isxwow.
            Call this immediately after reloading the dll.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.UIFrame.Show">
            <summary>
            Attempts to show the current frame.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.UIFrame.Hide">
            <summary>
            Attempts to hide the current frame
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.UIFrame.OnLuaReset(System.Object,LavishScriptAPI.LSEventArgs)">
            <summary>
            This function fires each time the global lua tables reset in order to keep our custom functions
            </summary>
            <param name="sender">the objec that raised the event</param>
            <param name="e">The LSEventArgs passed in</param>
        </member>
        <member name="P:ISXWoW.WoWUI.UIFrame.Name">
            <summary>
            The name of the current frame
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.UIFrame.IsVisible">
            <summary>
            Returns true if this frame is visible, otherwise false
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.UIFrame.Exists">
            <summary>
            Returns true if the current object exists in lua, otherwise false
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.RealmWizardUI.#ctor">
            <summary>
            Internal constructor used to make an exposed instance
            </summary>
        </member>
        <member name="T:ISXWoW.ItemDamageType">
            <summary>
            Types of damage an item can have
            </summary>
        </member>
        <member name="T:ISXWoW.WoWItemStats">
            <summary>
            A class representing an item's stats
            </summary>
        </member>
        <member name="M:ISXWoW.WoWItemStats.#ctor(LavishScriptAPI.LavishScriptPersistentObject)">
            <summary>
            Default Constructor
            </summary>
            <param name="lavishObj">Item object</param>
        </member>
        <member name="M:ISXWoW.WoWItemStats.#ctor(System.Int32)">
            <summary>
            Get a WoWItemStats by item ID, as from an item link. Using this may initiate a data request from the WoW server instead of giving a valid object.
            </summary>
            <param name="itemID"></param>
        </member>
        <member name="M:ISXWoW.WoWItemStats.DamageType(System.Int32)">
            <summary>
            Returns the type of damage at a given index.
            </summary>
            <param name="index">Index</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWItemStats.DPS(System.Int32)">
            <summary>
            Returns the Dps at a given index.
            </summary>
            <param name="index">Index</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWItemStats.MaxDamage(System.Int32)">
            <summary>
            Returns the max damage at a given index.
            </summary>
            <param name="index">Index</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWItemStats.MinDamage(System.Int32)">
            <summary>
            Returns the min damage at a given index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWItemStats.Spell(System.Int32)">
            <summary>
            Returns the Nth spell on the item. Choices are 1-5 currently
            </summary>
            <param name="Nth">The Nth spell on the item to return</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWItemStats.SpellType(System.Int32)">
            <summary>
            Returns the spelltype of the Nth item spell on this item. Choices are 1-5 currently
            </summary>
            <param name="Nth">The Nth spell on the item to return the type for</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWItemStats.StatModifier(System.Int32)">
            <summary>
            Returns stat modifier
            </summary>
            <param name="id">ID of stat</param>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWItemStats.ArcaneResist">
            <summary>
            Returns the Arcane Resist bonus on the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.Agility">
            <summary>
            Returns the Agility bonus on the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.Armor">
            <summary>
            Returns the Armor bonus on the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.AttackPower">
            <summary>
            Returns the Attack Power bonus on the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.Block">
            <summary>
            Returns block
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.BuyPrice">
            <summary>
            Returns the price the item sells from vendors.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.Class">
            <summary>
            Returns the class of the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.CritAvoidance">
            <summary>
            Returns crit hit avoidance
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.CritHit">
            <summary>
            Returns crit hit rating
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.DamageTypes">
            <summary>
            Returns all of the damage types of the item
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.Defense">
            <summary>
            Returns defense
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.Delay">
            <summary>
            Returns the delay of the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.Dodge">
            <summary>
            Returns dodge rating
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.DPSTotal">
            <summary>
            Returns the total DPS of the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.Expertise">
            <summary>
            Returns weapon expertise
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.EquipType">
            <summary>
            Returns the type of equipment the item is, if any.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.FireResist">
            <summary>
            Returns the Fire Resist bonus on the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.FrostResist">
            <summary>
            Returns the Frost Resist bonus on the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.Haste">
            <summary>
            Returns haste rating
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.Health">
            <summary>
            Returns the Health bonus on the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.Hit">
            <summary>
            Returns hit rating
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.HitAvoidance">
            <summary>
            Returns hit avoidance
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.HolyResist">
            <summary>
            Returns the Holy Resist bonus on the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.Intellect">
            <summary>
            Returns the intellect bonus on the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.IsConjured">
            <summary>
            Gets a value indicating if the item was conjured
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.IsGuildCharter">
            <summary>
            Gets a value indicating if the itme is a guild charter
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.IsMultiLoot">
            <summary>
            Gets a value indicating if the item can be looted from multiple people
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.IsProducer">
            <summary>
            Gets a value indicating if the item can product others
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.IsProspectable">
            <summary>
            Gets a value indicating if the item can be prospected
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.IsPVPReward">
            <summary>
            Gets a value indicating if the item is a PvP and/or Faction reward
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.IsReadable">
            <summary>
            Gets a value indicating if the itme is readable (letters, etc)
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.IsSpellTriggerer">
            <summary>
            Gets a value that indicates if the item triggers a spell by proc or equip
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.IsThrowingWeapon">
            <summary>
            Gets a value indicating if the item is a throwing weapon and loses durability with each throw
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.IsUniqueEquipped">
            <summary>
            Gets a value indicating if the item is unique-equipped
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.IsWand">
            <summary>
            Gets a value indicating if the item is a wand
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.IsWrapping">
            <summary>
            Gets a value indicating if the item is wrapping paper types of items
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.ItemLevel">
            <summary>
            Returns the level of the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.MaxDamageTotal">
            <summary>
            Returns the total max damage on the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.MaxStackCount">
            <summary>
            Require the max amount of times the item can be stacked.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.MeleeHaste">
            <summary>
            Returns melee haste rating
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.MinDamageTotal">
            <summary>
            Returns minimum damage
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.MinLevel">
            <summary>
            Returns the min level required to use the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.Name">
            <summary>
            Returns the name of the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.NatureResist">
            <summary>
            Returns the Nature Resist bonus on the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.Openable">
            <summary>
            Returns a value that indicates if the item is one that can be opened
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.Parry">
            <summary>
            Returns parry rating
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.RangedHaste">
            <summary>
            Returns ranged haste rating
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.Rarity">
            <summary>
            Returns the rarity of the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.Resilience">
            <summary>
            Returns resillience
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.SellPrice">
            <summary>
            Returns the price the itme Vendors for.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.SetID">
            <summary>
            ID of the item set this item is a part of
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.SetName">
            <summary>
            Name of the item set this item is a part of
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.ShadowResist">
            <summary>
            Returns the Shadow Resist bonus on the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.Skill">
            <summary>
            Returns the skill required to use the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.SkillExpertise">
            <summary>
            Returns skill expertise
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.SkillLevel">
            <summary>
            Returns the skill level required to use the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.SpellCrit">
            <summary>
            Returns spell crit rating
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.SpellHit">
            <summary>
            Returns spell hit rating
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.Spirit">
            <summary>
            Returns the spirit bonus on the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.Stamina">
            <summary>
            Returns the stamina bonus on the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.StartsQuest">
            <summary>
            ID of the quest this item starts
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.Strength">
            <summary>
            Returns the strength bonus on the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.SubType">
            <summary>
            Returns the sub type foa nn item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.UniqueMax">
            <summary>
            Maximum number of this item your character can own. 0 if the item is not unique.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItemStats.Usable">
            <summary>
            true if your character may use the item
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.TaxiFrame">
            <summary>
            The taxi frame used for flight masters
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TaxiFrame.Node(System.UInt32)">
            <summary>
            Returns a custom taxi node object
            </summary>
            <param name="Nth">The 1-64th Taxi node object you want</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TaxiFrame.Close">
            <summary>
            Uses lua to close the taxi map
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TaxiFrame.NodeButton(System.UInt32)">
            <summary>
            Returns a taxi node button used for clicking and such. An alternative to using Node()
            </summary>
            <param name="Nth">The 1-64th button you want to return</param>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TaxiFrame.NodeCount">
            <summary>
            The number of nodes displayed in the current taxi frame
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.TaxiFrame.TaxiPoint">
            <summary>
            Custom point object for taxi node points
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.TaxiFrame.TaxiPoint._X">
            <summary>
            The X value of the taxi point
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.TaxiFrame.TaxiPoint._Y">
            <summary>
            The Y value of the taxis point
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TaxiFrame.TaxiPoint.#ctor(System.Int32,System.Int32)">
            <summary>
            Internal constructor for our custom taxi node point object
            </summary>
            <param name="x">The X value to use for the point</param>
            <param name="y">The Y value to use for the point</param>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TaxiFrame.TaxiPoint.X">
            <summary>
            Returns the X value of this point
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TaxiFrame.TaxiPoint.Y">
            <summary>
            Returns the Y value of this point
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.TaxiFrame.TaxiNode">
            <summary>
            Custom class to do wowscript per taxi node
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.TaxiFrame.TaxiNode._Index">
            <summary>
            Holds the index for node operations
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TaxiFrame.TaxiNode.#ctor(System.UInt32)">
            <summary>
            Constructor for taxi nodes
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TaxiFrame.TaxiNode.Fly">
            <summary>
            Take this taxi node
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TaxiFrame.TaxiNode.SetCurrent">
            <summary>
            In theory, this should set "YOUAREHERE" node to this one, 
            allowing you to make other calculations with that in mind. It's here, but no idea the
            uses.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TaxiFrame.TaxiNode.Name">
            <summary>
            The name of the current node
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TaxiFrame.TaxiNode.Cost">
            <summary>
            The cost of the current nod
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TaxiFrame.TaxiNode.Type">
            <summary>
            Returns whether this node is CURRENT,REACHABLE, or INVALID
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TaxiFrame.TaxiNode.HopsTo">
            <summary>
            Returns the number of hops from the current node to this one
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TaxiFrame.TaxiNode.Position">
            <summary>
            Returns the X/Y of the current node, otherwise returns 0/0
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.RealmList">
            <summary>
            The frame used for selecting a server
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.RealmList.#ctor">
            <summary>
            Internal constructor to expose an instance of the object
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.RealmList.GetRealmName(System.UInt32,System.UInt32)">
            <summary>
            Gets the realm that at the specified category and index
            </summary>
            <param name="Category">The category (currently 2 max)</param>
            <param name="Index">The index down the list</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.RealmList.RequestRealmList">
            <summary>
            Requests the realm list be updated/populated
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.RealmList.SelectRealm(System.UInt32,System.UInt32)">
            <summary>
            Attempts to log into a realm at the specified category and index
            </summary>
            <param name="Category">The category (currently 2 max)</param>
            <param name="Index">The index down the list</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.RealmList.SelectRealm(System.String)">
            <summary>
            Attempts to log into a realm by name
            </summary>
            <param name="Server">The name of the realm to log in to</param>
            <returns>Returns true if the realm was found and is attempting to select it, otherwise false</returns>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.RealmList.ServerName">
            <summary>
            Gets the currently selected server's name
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.RealmList.CancelButton">
            <summary>
            The cancel button on this frame
            </summary>
        </member>
        <member name="T:ISXWoW.UI">
            <summary>
            Use this class to access the static/default frames of the game
            </summary>
        </member>
        <member name="F:ISXWoW.UI.AccountLoginFrame">
            <summary>
            Contains methods for entering username and password, as well as logging in
            </summary>
        </member>
        <member name="F:ISXWoW.UI.RealmListFrame">
            <summary>
            Contains methods for interacting with the Realm selection frame
            </summary>
        </member>
        <member name="F:ISXWoW.UI.CharacterSelectFrame">
            <summary>
            Contains methods for interacting with the Character selection frame
            </summary>
        </member>
        <member name="F:ISXWoW.UI.GlueDialogFrame">
            <summary>
            Used during the login process, contains connection messages.
            </summary>
        </member>
        <member name="F:ISXWoW.UI.GossipOptionsFrame">
            <summary>
            Gossip options for interaction with NPC's
            </summary>
        </member>
        <member name="F:ISXWoW.UI.TermsOfServiceFrame">
            <summary>
            The TOS frame you must accept every patch
            </summary>
        </member>
        <member name="F:ISXWoW.UI.MerchantFrame">
            <summary>
            Interact with NPC's that buy/sell
            </summary>
        </member>
        <member name="F:ISXWoW.UI.TradeSkillFrame">
            <summary>
            Used for cooking/alchemy,engineering etc
            </summary>
        </member>
        <member name="F:ISXWoW.UI.LootWindowFrame">
            <summary>
            Used for looting corpses, opening containers, mining minerals/herbs, etc
            </summary>
        </member>
        <member name="F:ISXWoW.UI.RealmWizardFrame">
            <summary>
            Not fully implemented. This frame has the US/Oceanic/PvP/RP etc Realm selection options. Current use is for generic frame methods only. (To see if it is visible and so on)
            </summary>
        </member>
        <member name="F:ISXWoW.UI.TrainerFrame">
            <summary>
            Used to train skills abilities (Class or skill trainers)
            </summary>
        </member>
        <member name="F:ISXWoW.UI.TooltipFrame">
            <summary>
            The main game tooltip
            </summary>
        </member>
        <member name="F:ISXWoW.UI.TaxiMasterFrame">
            <summary>
            Used for flight paths
            </summary>
        </member>
        <member name="F:ISXWoW.UI.Cursor">
            <summary>
            Contains functions for interacting with the game cursor
            </summary>
        </member>
        <member name="F:ISXWoW.UI.StaticPopup">
            <summary>
            Found examlpes of when this box is used: When waiting to logout or exit
            </summary>
        </member>
        <member name="F:ISXWoW.UI.MailFrame">
            <summary>
            Used for mail
            </summary>
        </member>
        <member name="F:ISXWoW.UI.QuestFrame">
            <summary>
            Used when talking to NPCs for quests
            </summary>
        </member>
        <member name="F:ISXWoW.UI.QuestLogFrame">
            <summary>
            Used for using the quest log
            </summary>
        </member>
        <member name="F:ISXWoW.UI.TalentFrame">
            <summary>
            Used for using the talent frame
            </summary>
        </member>
        <member name="F:ISXWoW.UI.AuctionFrame">
            <summary>
            Used for using the auction frame
            </summary>
        </member>
        <member name="F:ISXWoW.UI.CharacterCreateFrame">
            <summary>
            Used for creating characters
            </summary>
        </member>
        <member name="F:ISXWoW.UI.DeleteCharacterDialog">
            <summary>
            Used while attempting to delete a character in the CharacterSelectFrame
            </summary>
        </member>
        <member name="T:ISXWoW.SpellTypes">
            <summary>
            Enum used for the description of the spell
            </summary>
        </member>
        <member name="F:ISXWoW.SpellTypes.NULL">
            <summary>
            None
            </summary>
        </member>
        <member name="F:ISXWoW.SpellTypes.Use">
            <summary>
            If a spell has this type, then it triggers when you use the item
            </summary>
        </member>
        <member name="F:ISXWoW.SpellTypes.Equip">
            <summary>
            If a spell has this type, then it triggers when you equip the item
            </summary>
        </member>
        <member name="F:ISXWoW.SpellTypes.ChanceOnHit">
            <summary>
            If a spell has this type, then it has a chance every hit to triggers
            </summary>
        </member>
        <member name="T:ISXWoW.WoWItem">
            <summary>
            Used to get an Item object
            </summary>
        </member>
        <member name="T:ISXWoW.WoWObject">
            <summary>
            The most basic object class for WoW, about every other object in the game inherits this
            </summary>
        </member>
        <member name="M:ISXWoW.WoWObject.#ctor(System.String[])">
            <summary>
            Constructor for getting a wowobject.
            </summary>
            <param name="search">The params to pass for your object, using object search syntax</param>
        </member>
        <member name="M:ISXWoW.WoWObject.#ctor(LavishScriptAPI.LavishScriptPersistentObject)">
            <summary>
            Constructor for a "build your own" wowobject. This is not recommended.
            </summary>
            <param name="lavishObj"></param>
        </member>
        <member name="M:ISXWoW.WoWObject.op_Implicit(ISXWoW.WoWObject)~System.Int64">
            <summary>
            Used for implicit conversion of the string GUID to its Int64 counterpart
            </summary>
            <param name="obj">The WoWOjbect to perform this on</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWObject.Get(System.String[])">
            <summary>
            The preferred method for getting a wowobject, using object search syntax
            </summary>
            <param name="search">The object search criteria for the object</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWObject.AdjustLocation(System.Double,System.Double)">
            <summary>
            Adjusts the location of the object to 'Distance' distance away at 'Degrees' degrees
            </summary>
            <param name="Degrees">The degree to which you want to adjust the point</param>
            <param name="Distance">The length to which the point is adjusted</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWObject.AdjustLocationCCW(System.Double,System.Double)">
            <summary>
            Adjusts the location of the object to 'Distance' distance away at 'Degrees' degrees, only counter clock-wise
            </summary>
            <param name="Degrees">The degree to which you want to adjust the point</param>
            <param name="Distance">The length to which the point is adjusted</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWObject.ClickTerrain">
            <summary>
            Clicks the terrain at this objects location
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWObject.Face">
            <summary>
            Causes you to face this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWObject.Face(System.UInt32)">
            <summary>
            Causes you to face this object
            </summary>
            <param name="FullSpeed">The speed to face, default turning is 45, face -fast uses 120ish</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWObject.Face(System.UInt32,System.UInt32)">
            <summary>
            Causes you to face this object
            </summary>
            <param name="FullSpeed">The speed to face, default turning is 45, face -fast uses 120ish</param>
            <param name="Randomness">The precision to face</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWObject.Face(System.Boolean)">
            <summary>
            Causes you to face this object
            </summary>
            <param name="fast">Specify true you want to face the object fast, otherwise false</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWObject.GetCustom``1(System.String)">
            <summary>
            Get a custom field converted to a type (T)
            </summary>
            <typeparam name="T">The Type you want it converted to (string, int, bool, etc)</typeparam>
            <param name="FieldName">The name of the custom field to retrieve</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWObject.GetPlayer">
            <summary>
            Gets a WoWPlayer object out of this WoWObject, (Advanced)
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWObject.GetUnit">
            <summary>
            Gets a WoWUnit object out of this WoWObject, (Advanced)
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWObject.GetItem">
            <summary>
            Gets a WoWItem object out of this WoWObject, (Advanced)
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWObject.GetContainer">
            <summary>
            Gets a WoWContainer object out of this WoWObject, (Advanced)
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWObject.GetGameObject">
            <summary>
            Gets a WoWGameObject object out of this WoWObject, (Advanced)
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWObject.GetDynamicGameObject">
            <summary>
            Gets a WoWDynamicGameObject object out of this WoWObject, (Advanced)
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWObject.HeadingTo(System.Double,System.Double)">
            <summary>
            Returns the degree which this object must be facing in order to collide with the specified coordinates
            </summary>
            <param name="x">The X value</param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWObject.RightClickTerrain">
            <summary>
            Right Clicks the terrain at this objects location
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWObject.SetCustom(System.String,System.String)">
            <summary>
            Sets a custom field for later retrieval
            </summary>
            <param name="FieldName">The name to give the custom field</param>
            <param name="Value">The value to store for this field</param>
        </member>
        <member name="M:ISXWoW.WoWObject.Use">
            <summary>
            Attempts to use this game object
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWObject.Equals(ISXWoW.WoWObject)">
            <summary>
            Used for comparing one WoWObject to another
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWObject.Avoid">
            <summary>
            Marks this object as something to avoid, handly for using -avoid flag in object searches
            </summary>
        </member>
        <member name="P:ISXWoW.WoWObject.Distance">
            <summary>
            The distance this object is from you
            </summary>
        </member>
        <member name="P:ISXWoW.WoWObject.IntGUID">
            <summary>
            The GUID of the mob in Int64 form
            </summary>
        </member>
        <member name="P:ISXWoW.WoWObject.Entry">
            <summary>
            
            </summary>
        </member>
        <member name="P:ISXWoW.WoWObject.GUID">
            <summary>
            The GUID in string form, this is recommended
            </summary>
        </member>
        <member name="P:ISXWoW.WoWObject.Heading">
            <summary>
            This objects heading
            </summary>
        </member>
        <member name="P:ISXWoW.WoWObject.HeadingCCW">
            <summary>
            This objects heading counter clock-wise
            </summary>
        </member>
        <member name="P:ISXWoW.WoWObject.InLineOfSight">
            <summary>
            Returns true if the object is in light of sight from you, otherwise false
            </summary>
        </member>
        <member name="P:ISXWoW.WoWObject.Name">
            <summary>
            This objects name
            </summary>
        </member>
        <member name="P:ISXWoW.WoWObject.NewFlightPath">
            <summary>
            Returns true if this object has a flight path that your character doesn't know yet (the green exclamation)
            </summary>
        </member>
        <member name="P:ISXWoW.WoWObject.QuestStatus">
            <summary>
            Gets quest status
            </summary>
        </member>
        <member name="P:ISXWoW.WoWObject.Type">
            <summary>
            Returns a WoWObjectType representation of this objects Type
            </summary>
        </member>
        <member name="P:ISXWoW.WoWObject.Location">
            <summary>
            This location of this object in a Point3f object
            </summary>
        </member>
        <member name="P:ISXWoW.WoWObject.X">
            <summary>
            The X value of this objects location
            </summary>
        </member>
        <member name="P:ISXWoW.WoWObject.Y">
            <summary>
            The Y value of this objects location
            </summary>
        </member>
        <member name="P:ISXWoW.WoWObject.Z">
            <summary>
            The Z value of this objects location
            </summary>
        </member>
        <member name="M:ISXWoW.WoWItem.#ctor(System.String[])">
            <summary>
            Creates a new WoWItem object with the object search criteria that you specify. Same as .Get()
            </summary>
            <param name="search">The object search criteria to use to search with</param>
        </member>
        <member name="M:ISXWoW.WoWItem.#ctor(LavishScriptAPI.LavishScriptPersistentObject)">
            <summary>
            Creates a new WoWItem object based off a persistent object supplied. Advanced.
            </summary>
            <param name="lavishObj">The persistent object to create the new WoWItem object with.</param>
        </member>
        <member name="M:ISXWoW.WoWItem.Get(System.String[])">
            <summary>
            Creates a new WoWItem object with the object search criteria that you specify. This is the prefered method
            </summary>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWItem.Enchantment(System.Int32)">
            <summary>
            Returns an WoWEnchantment object for an enchantment on the item by index
            </summary>
            <param name="number">The Nth enchantment to return, 1-based</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWItem.Enchantment(System.String)">
            <summary>
            Returns an WoWEnchantment object for an enchantment on the item by name
            </summary>
            <param name="name">The name of the enchantment to return</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWItem.GetRandomEnchantment(System.Int32)">
            <summary>
            Returns an WoWEnchantment object for a random enchantment on the item by index
            </summary>
            <param name="number">The Nth enchantment to return, 1-based</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWItem.GetRandomEnchantment(System.String)">
            <summary>
            Returns an WoWEnchantment object for a random enchantment on the item by name
            </summary>
            <param name="name">The name of the enchantment to return</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWItem.PickUp">
            <summary>
            Similar to left clicking on an item. Attemps to pick it up onto the cursor
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWItem.Spell">
            <summary>
            Returns a wowspell object with the first spell the item casts, if any.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWItem.Spell(System.Int32)">
            <summary>
            Returns the Nth spell on the item. Choices are 1-5 currently
            </summary>
            <param name="Nth">The Nth spell on the item to return</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWItem.SpellType(System.Int32)">
            <summary>
            Returns the spelltype of the Nth item spell on this item. Choices are 1-5 currently
            </summary>
            <param name="Nth">The Nth spell on the item to return the type for</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWItem.Split(System.Int32)">
            <summary>
            Attemps to split this stack of items, be aware of the StackCount so you know what you are splitting
            </summary>
            <param name="Amount">The amount to pull out of the stack and onto your cursor</param>
        </member>
        <member name="M:ISXWoW.WoWItem.DamageType(System.Int32)">
            <summary>
            Returns the type of damage at a given index.
            </summary>
            <param name="index">Index</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWItem.DPS(System.Int32)">
            <summary>
            Returns the Dps at a given index.
            </summary>
            <param name="index">Index</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWItem.MaxDamage(System.Int32)">
            <summary>
            Returns the max damage at a given index.
            </summary>
            <param name="index">Index</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWItem.MinDamage(System.Int32)">
            <summary>
            Returns the min damage at a given index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWItem.StatModifier(System.Int32)">
            <summary>
            Returns stat modifier
            </summary>
            <param name="id">ID of stat</param>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWItem.Bag">
            <summary>
            Returns the bag that the item is in.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Class">
            <summary>
            Returns the name of the class of the item, if any (Armor, weapon, etc)
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.CollectCount">
            <summary>
            The total number of this item required for quests in the quest log
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Durability">
            <summary>
            Returns the durability left before the item breaks
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.DurabilityPercent">
            <summary>
            Returns the durability left before the item breaks as a percentage
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.EnchantmentCount">
            <summary>
            Returns the number of enchantments on the item
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.FullName">
            <summary>
            Returns the full name of the item including the random property name
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.MaxDurability">
            <summary>
            Returns the total durability the item has
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.MaxStackCount">
            <summary>
            Returns the number of this item to make a full stack
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Placement">
            <summary>
            The general location of the item
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.RandomEnchantmentCount">
            <summary>
            Returns the number of random enchantments on the item
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Rarity">
            <summary>
            Returns an int based off the items rarity 1-grey, 2-white, etc
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Slot">
            <summary>
            Returns the slot index of the current bag that this item is in
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Skill">
            <summary>
            Returns the skill needed to used this item
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.SkillLevel">
            <summary>
            Returns the skilllevel needed of the skill to use this item
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.StackCount">
            <summary>
            Returns the current number of this item in the stack
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Stats">
            <summary>
            Returns a WoWItemStats object represeting the items' stats
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.SubType">
            <summary>
            No idea
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Text">
            <summary>
            No idea, this might be broken or invalid
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Usable">
            <summary>
            Returns true if the item is usable, otherwise false
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Name">
            <summary>
            Returns the name of the item
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.EquipType">
            <summary>
            Returns the slot by name of this item:
            Head, Neck, Shoulders, Shirt, Chest, Waist, Legs, Feet, Wrist, Hands, Finger, Trinket, Weapon (1H), Shield, Ranged, Back, 
            Weapon (2H), Bag, Tabard, Robe, Weapon (Mainhand), Weapon (Offhand), Held, Ammo, Thrown, Ranged, Slot Item, Relic, Unknown
            Unknown should never happen unless something gets added, and i have no clue what Slot Item is,
            and it'll give you null if it doesnt have a slot assigned in the data
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.ItemLevel">
            <summary>
            Returns the items level
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Delay">
            <summary>
            Returns the delay the item has, if any
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Health">
            <summary>
            Returns the +Health the item has, if any
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Stamina">
            <summary>
            Returns the +Stamina the item has, if any
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.ShadowResist">
            <summary>
            Returns the +ShadowResist the item has, if any
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Agility">
            <summary>
            Returns the +Agility the item has, if any
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.HolyResist">
            <summary>
            Returns the +HolyResist the item has, if any
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.ArcaneResist">
            <summary>
            Returns the +ArcaneResist the item has, if any
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.FireResist">
            <summary>
            Returns the +FireResist the item has, if any
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Intellect">
            <summary>
            Returns the +Intellect the item has, if any
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.NatureResist">
            <summary>
            Returns the +NatureResist the item has, if any
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.AttackPower">
            <summary>
            Returns the +AttackPower the item has, if any
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Strength">
            <summary>
            Returns the +Strength the item has, if any
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.FrostResist">
            <summary>
            Returns the +FrostResist the item has, if any
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Spirit">
            <summary>
            Returns the +Spirit the item has, if any
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Set">
            <summary>
            Returns the name of the Set item it is a member of, if any
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.MinLevel">
            <summary>
            Returns the minimum level required to use the item, otherwise 0
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.SetID">
            <summary>
            Returns the ID for the set that this item belongs to, if any
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.SellPrice">
            <summary>
            Returns the sell price for the item, in copper
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.StartsQuest">
            <summary>
            Returns the ID of the quest the item starts, if any
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.BuyPrice">
            <summary>
            Returns the price to buy this item, in copper
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Armor">
            <summary>
            Returns the armor rating of the item, if any
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.SkillExpertise">
            <summary>
            Returns skill expertise
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Defense">
            <summary>
            Returns defense
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Dodge">
            <summary>
            Returns dodge rating
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Parry">
            <summary>
            Returns parry rating
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Block">
            <summary>
            Returns block
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.SpellCrit">
            <summary>
            Returns spell crit rating
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.SpellHit">
            <summary>
            Returns spell hit rating
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.MeleeHaste">
            <summary>
            Returns melee haste rating
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.RangedHaste">
            <summary>
            Returns ranged haste rating
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Hit">
            <summary>
            Returns hit rating
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.CritHit">
            <summary>
            Returns crit hit rating
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.HitAvoidance">
            <summary>
            Returns hit avoidance
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.CritAvoidance">
            <summary>
            Returns crit hit avoidance
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Resilience">
            <summary>
            Returns resillience
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Haste">
            <summary>
            Returns haste rating
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.Expertise">
            <summary>
            Returns weapon expertise
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.IsConjured">
            <summary>
            Gets a value indicating if the item was conjured
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.IsGuildCharter">
            <summary>
            Gets a value indicating if the itme is a guild charter
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.IsMultiLoot">
            <summary>
            Gets a value indicating if the item can be looted from multiple people
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.IsProducer">
            <summary>
            Gets a value indicating if the item can product others
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.IsProspectable">
            <summary>
            Gets a value indicating if the item can be prospected
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.IsPVPReward">
            <summary>
            Gets a value indicating if the item is a PvP and/or Faction reward
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.IsReadable">
            <summary>
            Gets a value indicating if the itme is readable (letters, etc)
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.IsSpellTriggerer">
            <summary>
            Gets a value that indicates if the item triggers a spell by proc or equip
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.IsThrowingWeapon">
            <summary>
            Gets a value indicating if the item is a throwing weapon and loses durability with each throw
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.IsUniqueEquipped">
            <summary>
            Gets a value indicating if the item is unique-equipped
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.IsWand">
            <summary>
            Gets a value indicating if the item is a wand
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.IsWrapping">
            <summary>
            Gets a value indicating if the item is wrapping paper types of items
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.MaxDamageTotal">
            <summary>
            Returns the total max damage on the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.DPSTotal">
            <summary>
            Returns the total DPS of the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.SetName">
            <summary>
            Name of the item set this item is a part of
            </summary>
        </member>
        <member name="P:ISXWoW.WoWItem.UniqueMax">
            <summary>
            Maximum number of this item your character can own. 0 if the item is not unique.
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.GlueDialog">
            <summary>
            The frame that is used during the login process for giving you status updates on how the login action is performing
            i.e. "Connected", "Logging Into Realm", "Your account is banned, kkthxbye"
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.GlueDialog.Text">
            <summary>
            Returns Text of the GlueDialog. Retuns String.Empty if it is not visible
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.GlueDialog.DefaultButton">
            <summary>
            The first button of the Glue Dialog, assumed to be the "OK" type button if there are 1 or more options.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.GlueDialog.SecondaryButton">
            <summary>
            The second button of the Glue Dialog if the user has 2 options to choose from.
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.GameTooltip">
            <summary>
            The main game tooltip, used all over the place
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GameTooltip.SetOwner(ISXWoW.WoWUI.UIFrame,ISXWoW.WoWUI.AnchorTypes)">
            <summary>
            Sets the owner of the game tooltip to the supplied frame
            </summary>
            <param name="frame">The frame to take ownership of the tooltip</param>
            <param name="anchor">The Anchor style</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GameTooltip.SetOwner(ISXWoW.WoWUI.UIFrame)">
            <summary>
            Sets the owner of hte game tooltip to the supplied frame, with no anchor
            </summary>
            <param name="frame">The frame to take ownership of the tooltip</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GameTooltip.IsOwned(ISXWoW.WoWUI.UIFrame)">
            <summary>
            Returns true if the supplied frame currently owns the tooltip
            </summary>
            <param name="frame">The frame to check ownership on</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GameTooltip.SetBagItem(System.UInt32,System.UInt32)">
            <summary>
            Sets the tooltip to the specified bag and slot
            </summary>
            <param name="Bag">The Nth bag</param>
            <param name="Slot">The Nth Slot in the bag</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GameTooltip.SetPlayerBuff(System.UInt32)">
            <summary>
            Sets the tooltip to the specified buff index
            </summary>
            <param name="BuffIndex">The Nth buff to set the tooltip to</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GameTooltip.SetLootItem(System.UInt32)">
            <summary>
            Sets the tooltip to the supplied loot window slot
            </summary>
            <param name="Slot">The loot window slot to set the tooltip to</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GameTooltip.SetAction(System.UInt32)">
            <summary>
            Sets the tooltip to the supplied Action bar slot
            </summary>
            <param name="Slot">The Action bar slot to set the tooltip to</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GameTooltip.AddLine(System.String)">
            <summary>
            Adds a line of text to the tooltip
            </summary>
            <param name="text">The text you want to add</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GameTooltip.AddLine(System.String,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Adds a line of text to the tooltip
            </summary>
            <param name="text">The text to add</param>
            <param name="r">The Red value, values between 0-1</param>
            <param name="b">The Blue value, values between 0-1</param>
            <param name="g">The Green value, values between 0-1</param>
            <param name="wrap">True to wrap text in the tooltip</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GameTooltip.AddLine(System.String,System.Double,System.Double,System.Double)">
            <summary>
            Adds a line of text to the tooltip
            </summary>
            <param name="text">The text to add</param>
            <param name="r">The Red value, values between 0-1</param>
            <param name="b">The Blue value, values between 0-1</param>
            <param name="g">The Green value, values between 0-1</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GameTooltip.AppendText(System.String)">
            <summary>
            Appends a line of text to the tooltip
            </summary>
            <param name="text">The text you want to append</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GameTooltip.ClearLines">
            <summary>
            Clears the lines of the tooltip
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GameTooltip.Text">
            <summary>
            The text of the tooltip as a stringbuilder object 
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.GameTooltip.LineCount">
            <summary>
            Returns the number of lines that have text on them, or something
            </summary>
        </member>
        <member name="M:ISXWoW.ISXWoW.Detach">
            <summary>
            Resets the WoWScript wrapped functions, this is used if you, for some reason, plan on unloading isxwow
            Call this when doing so.
            </summary>
        </member>
        <member name="M:ISXWoW.ISXWoW.WoWScript``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Lua"></param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.ISXWoW.WoWScript``1(System.String,System.UInt32)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Lua"></param>
            <param name="ReturnValueN"></param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.ISXWoW.IsPathObstructedOCD(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            A theoretically more accurate but more cpu intensive version of IsPathObstructed.  OCD = Obsessive Compulsive Disorder
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="z1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="z2"></param>
            <returns></returns>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.SendMailMode">
            <summary>
            An enumeration representing the different types of sending mail modes
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.SendMailMode.Mail">
            <summary>
            Send regular money
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.SendMailMode.COD">
            <summary>
            Send item through Cash on Delivery (COD)
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.AuctionInvoiceType">
            <summary>
            An enumeration representing the different types of auction invoices.
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.AuctionInvoice">
            <summary>
            Class that represents an auction invoice.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.AuctionInvoice.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Default constructor
            </summary>
            <param name="rawData">Raw data</param>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.AuctionInvoice.AuctionType">
            <summary>
            Gets the type of auction.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.AuctionInvoice.Bid">
            <summary>
            Gets the bid amount.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.AuctionInvoice.Buyout">
            <summary>
            Gets the buyout amount.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.AuctionInvoice.Deposit">
            <summary>
            Gets the deposit amount.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.AuctionInvoice.Fee">
            <summary>
            Gets the fee amount.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.AuctionInvoice.ItemName">
            <summary>
            Gets the name of the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.AuctionInvoice.PlayerName">
            <summary>
            Gets the name of the player that took place in the auction.
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.MailUI">
            <summary>
            A class representing the in-game MailUI
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MailUI.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MailUI.CanDelete(System.Int32)">
            <summary>
            Returns a value indicating whether or not a message can be deleted.
            </summary>
            <param name="index">Index of message.</param>
            <returns>bool</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MailUI.Clear">
            <summary>
            Clears the text and returns COD money to inventory.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MailUI.DeleteMessage(System.Int32)">
            <summary>
            Delete a message in your inbox.
            </summary>
            <param name="index">Index of message to delete.</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MailUI.GetAuctionInvoice(System.Int32)">
            <summary>
            Returns an auction invoice from your inbox.
            </summary>
            <param name="index">Index of message.</param>
            <returns>System.Collections.Generic.List</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MailUI.MessageText(System.Int32)">
            <summary>
            Retrieves the message body text for a message.
            </summary>
            <param name="index">Index of message to retrieve text of.</param>
            <returns>string</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MailUI.SendMail(System.String,System.String,System.String)">
            <summary>
            Send mail.
            </summary>
            <param name="recipient">Recipient's character name</param>
            <param name="subject">Subject</param>
            <param name="body">Message</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MailUI.SetItem">
            <summary>
            Sets the item on the cursor to the next available attachment slot in the mail.
            <param name="attachSlot">Attachment slot</param>
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MailUI.SetItem(System.Int32)">
            <summary>
            Sets the item on the cursor in the mail.
            <param name="attachSlot">Attachment slot</param>
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MailUI.SetMode(ISXWoW.WoWUI.Frames.SendMailMode)">
            <summary>
            Sets the mail sending mode.
            </summary>
            <param name="mode">Mode to send.</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MailUI.TakeItem(System.Int32)">
            <summary>
            Takes the next item out of a message in your inbox.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MailUI.TakeItem(System.Int32,System.Int32)">
            <summary>
            Takes an item out of a message in your inbox.
            </summary>
            <param name="index">Index of message to get the item out of.</param>
            <param name="attachSlot">Attachment slot</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MailUI.TakeMoney(System.Int32)">
            <summary>
            Takes money out of a message in your inbox.
            </summary>
            <param name="index">Index of message to get money out of.</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MailUI.UpdateInbox">
            <summary>
            Updates inbox messages and stored information for messages.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.MailUI.Copper">
            <summary>
            Gets or sets the copper in the send mail frame.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.MailUI.HaveMail">
            <summary>
            Returns a value indicating whether or not you have new (unread) mail.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.MailUI.Gold">
            <summary>
            Gets or sets the gold in the send mail frame.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.MailUI.MessageCount">
            <summary>
            Returns the amount of items in your inbox.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.MailUI.PostagePrice">
            <summary>
            Gets the postage price for your currnet send mail message.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.MailUI.Silver">
            <summary>
            Gets or sets the silver in the send mail frame.
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.CharacterSelectUI">
            <summary>
            The frame used during character selection after you log into the server
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.CharacterSelectUI.CharacterData(System.UInt32)">
            <summary>
            Character Data to retrieve (contains data that is under the name such as level, class, etc), index 0 is the character name
            </summary>
            <param name="Nth">Character data to retrieve, 1 based</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.CharacterSelectUI.Exit">
            <summary>
            Exits the character selection frame
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.CharacterSelectUI.SelectCharacter(System.String)">
            <summary>
            Peforms the operation of selecting the character by name (case insensitive)
            </summary>
            <param name="Character">The name of the character to select</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.CharacterSelectUI.SelectCharacter(System.UInt32)">
            <summary>
            The same as left clicking (once) on a character in the selection list
            </summary>
            <param name="Nth">The number in the list (1 based)</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.CharacterSelectUI.TryDelete">
            <summary>
            Attempts to delete the selected character, bypassing all confirmation dialogs
            *WARNING* It will most likely succeed, so if you are fiddling with this, make sure you truely mean to delete this character.
            Also, I would do lots of testing on a server that has throw away characters to insure it doesn't occasionaly "slip" and delete
            the wrong one. You have been warned.
            </summary>
            <returns>a bool</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.CharacterSelectUI.TryDelete(System.Boolean)">
            <summary>
            Attempts to delete the selected character, giving the option to bypass confirm dialgos
            *NOTE* If you wish to not bypass confirmation dialogs, then passing FALSE to this method you can use 
            UI.DeleteCharacterDialog to finish confirmation yourself
            *WARNING* It will most likely succeed, so if you are fiddling with this, make sure you truely mean to delete this character.
            Also, I would do lots of testing on a server that has throw away characters to insure it doesn't occasionaly "slip" and delete
            the wrong one. You have been warned.
            </summary>
            <param name="bypassConfirmation">Specify TRUE if you want to bypass all confirmation dialogs</param>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.CharacterSelectUI.CharacterCount">
            <summary>
            Number of characters on the currently selected server
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.CharacterSelectUI.SelectedIndex">
            <summary>
            Returns the index of the currently selected character
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.CharacterSelectUI.BackButton">
            <summary>
            Selects the back button, takeing you to the AccountLogin frame
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.AuctionItemTimeLeft.Short">
            <summary>
            Less then 30 minutes
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.AuctionItemTimeLeft.Medium">
            <summary>
            30 minutes to 2 hours
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.AuctionItemTimeLeft.Long">
            <summary>
            2 to 8 hours
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.AuctionItemTimeLeft.VeryLong">
            <summary>
            More then 8 hours
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.AuctionItem.#ctor(System.String,System.Int32,System.Boolean,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="buyoutPrice"></param>
            <param name="canUse"></param>
            <param name="count"></param>
            <param name="highBid"></param>
            <param name="highBidder"></param>
            <param name="level"></param>
            <param name="minBid"></param>
            <param name="minIncrement"></param>
            <param name="owner"></param>
            <param name="quality"></param>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.AuctionItem.BuyoutPrice">
            <summary>
            Get the buyout price of the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.AuctionItem.CanUse">
            <summary>
            Get s value indicating whether or not the item can be used by the player.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.AuctionItem.Count">
            <summary>
            Gets the count of the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.AuctionItem.HighBid">
            <summary>
            Gets the highest bid, 0 if none.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.AuctionItem.HighBidder">
            <summary>
            Gets the name of the high bidder.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.AuctionItem.Level">
            <summary>
            Gets the level of the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.AuctionItem.MinBid">
            <summary>
            Gets the minimum bid amount.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.AuctionItem.MinIncrement">
            <summary>
            Gets the minimum amount the bid can be incrimented.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.AuctionItem.Name">
            <summary>
            Gets the name of the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.AuctionItem.Owner">
            <summary>
            Gets the name of the owner of the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.AuctionItem.Quality">
            <summary>
            Gets the quality of the item.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.AuctionUI.CancelAuction(System.Int32)">
            <summary>
            Cancels an auction.
            </summary>
            <param name="index">Index of auction.</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.AuctionUI.CanSortReversed(ISXWoW.WoWUI.Frames.AuctionItemType,ISXWoW.WoWUI.Frames.AuctionSortType)">
            <summary>
            Returns a value indicating whether or not a sort is reversed.
            </summary>
            <param name="itemType">Type of item (Page).</param>
            <param name="sortType">Type of sort.</param>
            <returns>bool</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.AuctionUI.Close">
            <summary>
            Closes the auction house.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.AuctionUI.GetItemInfo(ISXWoW.WoWUI.Frames.AuctionItemType,System.Int32)">
            <summary>
            Gets item information.
            </summary>
            <param name="itemType">Type of item (Page).</param>
            <param name="index">Index of the item.</param>
            <returns>ISXWoW.WoWUI.Frames.AuctionItem</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.AuctionUI.GetItemTimeLeft(ISXWoW.WoWUI.Frames.AuctionItemType,System.Int32)">
            <summary>
            Gets the time left for an item.
            </summary>
            <param name="itemType">Type of item (Page).</param>
            <param name="index">Index of the item.</param>
            <returns>ISXWoW.WoWUI.Frames.AuctionItemTimeLeft</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.AuctionUI.GetPageItemCount(ISXWoW.WoWUI.Frames.AuctionItemType)">
            <summary>
            Returns the number of items currently on a page.
            </summary>
            <param name="itemType">Type of item (Page).</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.AuctionUI.GetPageItemTotalCount(ISXWoW.WoWUI.Frames.AuctionItemType)">
            <summary>
            Returns the number of total items currently on a page.
            </summary>
            <param name="itemType">Type of item (Page).</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.AuctionUI.GetSelectedIndex(ISXWoW.WoWUI.Frames.AuctionItemType)">
            <summary>
            Returns the selected index on a given page.
            </summary>
            <param name="itemType">Type of item (Page).</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.AuctionUI.GetSubCategoryNames(System.Int32)">
            <summary>
            Returns a list of subcategory names.
            </summary>
            <param name="index">Index of main category.</param>
            <returns>System.Collections.Generic.List</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.AuctionUI.IsSortReversed(ISXWoW.WoWUI.Frames.AuctionItemType,ISXWoW.WoWUI.Frames.AuctionSortType)">
            <summary>
            Returns a value indicating whether or not a sort is reversed.
            </summary>
            <param name="itemType">Type of item (Page).</param>
            <param name="sortType">Type of sort.</param>
            <returns>bool</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.AuctionUI.PlaceBid(ISXWoW.WoWUI.Frames.AuctionItemType,System.Int32,System.Int32)">
            <summary>
            Places a bid on an item.
            </summary>
            <param name="itemType">Type of item (Page).</param>
            <param name="index">Index of item.</param>
            <param name="bid">Bid amount.</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.AuctionUI.SendQuery(System.Boolean)">
            <summary>
            Queries auction house for items
            </summary>
            <param name="getAll">Get all items</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.AuctionUI.SendQuery(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Queries auction house for items.
            </summary>
            <param name="name">Item name.</param>
            <param name="minLevel">Minimum level.</param>
            <param name="maxLevel">Maximum level.</param>
            <param name="armorType">Type of equipment (null for no restrictions).</param>
            <param name="mainCatIndex">Main category index.</param>
            <param name="subCatIndex">Subcategory index.</param>
            <param name="page">???</param>
            <param name="isUsable"></param>
            <param name="quality">Rarity index (Grey = 1, White = 2 ...)</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.AuctionUI.SetSelectedIndex(ISXWoW.WoWUI.Frames.AuctionItemType,System.Int32)">
            <summary>
            Sets the selected idnex.
            WARNING: Changing the index does not reflect on your UI, but it does change.
            </summary>
            <param name="itemType">Type of item (Page).</param>
            <param name="index">Index of item.</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.AuctionUI.SetSort(ISXWoW.WoWUI.Frames.AuctionItemType,ISXWoW.WoWUI.Frames.AuctionSortType)">
            <summary>
            Sets a sort on items.
            </summary>
            <param name="itemType">Type of item (Page).</param>
            <param name="sortType">Type of sort.</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.AuctionUI.SetSellItem">
            <summary>
            Sets the item on your cursor in the sell item box.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.AuctionUI.StartAuction(System.Int32,System.Int32,ISXWoW.WoWUI.Frames.AuctionItemTimeLeft)">
            <summary>
            Start an auction.
            </summary>
            <param name="minBid">Minimum bid.</param>
            <param name="buyoutPrice">Buyout price.</param>
            <param name="duration">Duration.</param>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.AuctionUI.CanSearch">
            <summary>
            Gets a value indicating whether or not you can search.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.AuctionUI.CanSearchAll">
            <summary>
            Gets a value indicating whether or not you can search all auction house items
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.AuctionUI.CategoryNames">
            <summary>
            Gets a list of auction house category names.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.AuctionUI.DepositPercentageRate">
            <summary>
            Gets the current deposit percentage rate.
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.AccountLoginUI">
            <summary>
            The frame uses for logging into WoW (username/password)
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.AccountLoginUI.#ctor">
            <summary>
            Internal constructor for the AccountLoginFrame
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.AccountLoginUI.TryLogin(System.String,System.String)">
            <summary>
            Attempt to try logging in
            </summary>
            <param name="account">Account to use</param>
            <param name="password">Password for the account</param>
        </member>
        <member name="T:ISXWoW.WoWUI.Buttons.UIButton">
            <summary>
            Class used for a button object on all frames
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Buttons.UIButton.Click">
            <summary>
            Attempts to click the button
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Buttons.UIButton.Enable">
            <summary>
            Attempts to render the button Enabled
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Buttons.UIButton.Disable">
            <summary>
            Attempts to render the button disabled
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Buttons.UIButton.IsEnabled">
            <summary>
            Returns true if the button is enabled, otherwise false
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWUI.Buttons.UIButton.Text">
            <summary>
            Attempts to get display text from the current UI button
            </summary>
        </member>
        <member name="M:ISXWoW.WoWCursorItem.Bag">
            <summary>
            Add the cursor item into an empty bag slot.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWCursorItem.Delete">
            <summary>
            Deletes the item from the cursor.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWCursorItem.Equip">
            <summary>
            Equip the item from the cursor.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWCursorItem.Give">
            <summary>
            Give the item?  I have no idea...
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.Aggressive">
            <summary>
            Gets a value indicating whether or not the unit is aggressive
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.Altitude">
            <summary>
            Gets the altitude
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.Attackable">
            <summary>
            Gets a value indicating whether or not the unit is attackable
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.CanGossip">
            <summary>
            Gets a value indicating whether or not the unit can gossip
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.Class">
            <summary>
            Gets the class
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.Classification">
            <summary>
            Gets classification
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.CreatureType">
            <summary>
            Gets creature type
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.CurrentTarget">
            <summary>
            Gest the current target
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.Dead">
            <summary>
            Gets a value indicating whether or not the unit is dead
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.Energy">
            <summary>
            Gets amount of energy
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.EnergyPercent">
            <summary>
            Gets percent of energy
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.Faction">
            <summary>
            Gets the faction
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.FactionGroup">
            <summary>
            Gets faction group
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.Flying">
            <summary>
            Gets a value indicating whether or not the unit is flying
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.Gender">
            <summary>
            Gender of the unit
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.Guild">
            <summary>
            Gets guild
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.Happiness">
            <summary>
            Gets happiness
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.HappinessPercent">
            <summary>
            Gets percent of happiness
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.Health">
            <summary>
            Gets health
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.HealthPercent">
            <summary>
            Gets health percent
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.Height">
            <summary>
            Gets height
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.InCombat">
            <summary>
            Gets a value indicating if the unit is in combat
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.IsAuctioneer">
            <summary>
            Gets a value indicating whether or not the unit is an auctioneer
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.IsBanker">
            <summary>
            Gets a value indicating whether or not the unit is a banker
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.IsFalling">
            <summary>
            Gets a value indicating whether or not the unit is falling
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.IsJumping">
            <summary>
            Gets a value indicating whether or not the unit is jumping
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.IsTrainer">
            <summary>
            Gets a value indicating whether or not the unit is a trainer
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.IsInnkeeper">
            <summary>
            Gets a value indicating whether or not the unit is an innkeeper
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.IsMerchant">
            <summary>
            Gets a value indicating whether or not the unit is a merchant
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.IsSpiritHealer">
            <summary>
            Gets a value indicating whether or not the unit is a spirit healer
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.IsStableMaster">
            <summary>
            Gets a value indicating whether or not the unit is a stable master
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.IsSwimming">
            <summary>
            Gets a value indicating whether or not the unit is swimming
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.IsTaxiMaster">
            <summary>
            Gets a value indicating whether or not the unit is a taxi master
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.IsTotem">
            <summary>
            Gets a value indicating whether or not the unit is a totem
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.Level">
            <summary>
            Gets level
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.Mana">
            <summary>
            Gets current mana
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.ManaPercent">
            <summary>
            Gets mana percent
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.MaxEnergy">
            <summary>
            Gets max energy
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.MaxHealth">
            <summary>
            Gets max health
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.MaxHappiness">
            <summary>
            Gets max happiness
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.MaxMana">
            <summary>
            Gets max mana
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.MaxPower">
            <summary>
            Gets max power
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.MaxRage">
            <summary>
            Gets max rage
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.MountName">
            <summary>
            Gets name of current mount
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.OwnedByMe">
            <summary>
            Gets a value indicating whether or not the unit is owned by the active player
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.Owner">
            <summary>
            Gets owner of the unit
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.Pet">
            <summary>
            Gets the pet of the unit
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.Power">
            <summary>
            Gets current power
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.Pvp">
            <summary>
            Gets a value indicating whether or not the unit has PvP flag on
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.Race">
            <summary>
            Gets race
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.Rage">
            <summary>
            Gets current rage
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.RagePercent">
            <summary>
            Gets rage precent
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.ReactionLevel">
            <summary>
            Gets reaction level
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUnit.Tapped">
            <summary>
            Gets a value indicating whether or not the unit is tapped
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.QuestReward">
            <summary>
            Represents a quest reward.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestReward.Count">
            <summary>
            Returns the count of the reward.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestReward.IsUsable">
            <summary>
            Returns a value indicating whether or not the item is usable.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestReward.Name">
            <summary>
            Returns the name of the item.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestReward.Quality">
            <summary>
            Returns the quality of the item.
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.QuestLogEntry">
            <summary>
            Represents a quest log entry.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestLogEntry.#ctor(System.String,System.Int32,System.String,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="title"></param>
            <param name="level"></param>
            <param name="tag"></param>
            <param name="suggestedGroupSize"></param>
            <param name="isHeader"></param>
            <param name="isCollapsed"></param>
            <param name="status"></param>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestLogEntry.IsCollapsed">
            <summary>
            Returns a value indicating whether or not the entry is collapsed.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestLogEntry.IsHeader">
            <summary>
            Returns a value indicating whether or not the entry is a header.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestLogEntry.Level">
            <summary>
            Returns the level of the entry.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestLogEntry.Status">
            <summary>
            Returns the status of the entry. (-1 = Failed, 1 = Completed)
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestLogEntry.IsDaily">
            <summary>
            Returns true if this quest is considered a "Daily" quest, doable once per day.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestLogEntry.SuggestedGroupSize">
            <summary>
            Returns the suggested group size.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestLogEntry.Tag">
            <summary>
            Returns the tag for the entry. (Elite, Dungeon, PvP, Raid, Group)
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestLogEntry.Title">
            <summary>
            Returns the title of the entry.
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.QuestLogUI">
            <summary>
            Represents the QuestLogUI frame
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestLogUI.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestLogUI.AbandonQuest">
            <summary>
            Abandons currently selected quest.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestLogUI.AbandonQuest(System.String)">
            <summary>
            Attempts to abandon a quest by name. First match wins.
            Note: This function performs header expansion for all headers in reverse order prior to execution, if 1 or more header needs expanding, 
            a 2nd recursive call is made if the quest was not found prior.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestLogUI.CollapseQuestHeader(System.Int32)">
            <summary>
            Collapses a quest header.
            </summary>
            <param name="index">Index at which to collapse.</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestLogUI.ExpandQuestHeader(System.Int32)">
            <summary>
            Expands a quest header.
            </summary>
            <param name="index">Index at which to expand.</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestLogUI.IsBeingWatched(System.Int32)">
            <summary>
            Returns a value indicating whether or not a quest is being watched.
            </summary>
            <param name="index">Index of quest to determine is being watched.</param>
            <returns>bool</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestLogUI.Entry(System.Int32)">
            <summary>
            Returns a log entry. This includes headers
            </summary>
            <param name="index">Index of entry.</param>
            <returns>ISXWoW.WoWUI.Frames.QuestLogEntry</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestLogUI.Reward(System.Int32)">
            <summary>
            Returns a reward for the currently selected quest.
            </summary>
            <param name="index">Index of reward.</param>
            <returns>ISXWoW.WoWUI.Frames.QuestReward</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestLogUI.RewardChoice(System.Int32)">
            <summary>
            Returns a reward choice for the currently selected quest.
            </summary>
            <param name="index">Index of the reward choice.</param>
            <returns>ISXWoW.WoWUI.Frames.QuestReward</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestLogUI.SelectEntry(System.Int32)">
            <summary>
            Selects a log entry in the quest log. This include headers.
            </summary>
            <param name="index">Index of entry.</param>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestLogUI.CanShare">
            <summary>
            Returns a value indicating whether or not the currently selected quest can be shared.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestLogUI.IsCompletable">
            <summary>
            Returns a value indicating whether or not the quest can be completed.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestLogUI.IsFailed">
            <summary>
            Returns a value indcating whether or not the quest is failed.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestLogUI.LogEntries">
            <summary>
            Returns the number of log entries being taken up by quests.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestLogUI.TotalLogEntries">
            <summary>
            Returns the number of log entries being taken up by quests, as well as entries taken up by headers
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestLogUI.ObjectiveCount">
            <summary>
            Returns the number of objectives for the currently selected quest.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestLogUI.RewardChoiceCount">
            <summary>
            Returns the number of reward choices available for the currently selected quest.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestLogUI.RewardCount">
            <summary>
            Returns the number of rewards for the currently selected quest.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestLogUI.RewardMoney">
            <summary>
            Returns the amount of money rewarded for the currently selected quest.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestLogUI.SelectedIndex">
            <summary>
            Returns the index of the currently selected quest.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestLogUI.Text">
            <summary>
            Returns the description and objective text required for the currently selected quest.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestLogUI.WatchCount">
            <summary>
            Returns the number of quests currently being watched.
            </summary>
        </member>
        <member name="T:ISXWoW.GuidList">
            <summary>
            Used for obtaining a set of WoW object search results. Create via GuidList MyGuidList = new GuidList()
            </summary>
        </member>
        <member name="M:ISXWoW.GuidList.#ctor">
            <summary>
            Constructor for the GuidList class, gets the LS object. One of the recommended ways
            </summary>
        </member>
        <member name="M:ISXWoW.GuidList.#ctor(LavishScriptAPI.LavishScriptObject)">
            <summary>
            Get a new GuidList your own way, not recommended
            </summary>
            <param name="lavishObj"></param>
        </member>
        <member name="M:ISXWoW.GuidList.New(System.String[])">
            <summary>
            Called to create a new GUIDlist to search with as an alternative to "new GuidList()"
            </summary>
            <returns>a new GuidList object</returns>
        </member>
        <member name="M:ISXWoW.GuidList.Clear">
            <summary>
            Clears the result set
            </summary>
            <returns>true if successful</returns>
        </member>
        <member name="M:ISXWoW.GuidList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets a GuidList enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.GuidList.GetGuid(System.Int32)">
            <summary>
            Gets a GUID
            </summary>
            <param name="index">Index</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.GuidList.GetIntGuid(System.Int32)">
            <summary>
            Gets a GUID in Int64 form
            </summary>
            <param name="index">Index</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.GuidList.GetObject(System.Int32)">
            <summary>
            Returns a new WoWObject for specific item in the GuidList
            </summary>
            <param name="index">The Nth item to retrieve from the list (0-based)</param>
            <returns>A new WoWObject</returns>
        </member>
        <member name="M:ISXWoW.GuidList.GUID(System.UInt32)">
            <summary>
            Returns a GUID from the list
            </summary>
            <param name="Nth">The Nth GUID to retrieve from the list (0-based)</param>
            <returns>a string GUID</returns>
        </member>
        <member name="M:ISXWoW.GuidList.IntGUID(System.UInt32)">
            <summary>
            Returns a GUID from the list
            </summary>
            <param name="Nth">The Nth GUID to retrieve from the list (0-based)</param>
            <returns>An Int64 GUID</returns>
        </member>
        <member name="M:ISXWoW.GuidList.Object(System.UInt32)">
            <summary>
            Returns a new WoWObject for specific item in the GuidList
            </summary>
            <param name="Nth">The Nth item to retrieve from the list (0-based)</param>
            <returns>A new WoWObject</returns>
        </member>
        <member name="M:ISXWoW.GuidList.Search(System.String[])">
            <summary>
            Adds search results to this object list
            </summary>
            <param name="search">Object search criteria</param>
            <returns>true if successful</returns>
        </member>
        <member name="P:ISXWoW.GuidList.Count">
            <summary>
            The count of items in the current list
            </summary>
        </member>
        <member name="T:ISXWoW.GuidList`1">
            <summary>
            Generic GUID list used for searching objects.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:ISXWoW.GuidList`1.New(System.String[])">
            <summary>
            Called to create a new GUIDlist to search with as an alternative to "new GuidList()"
            </summary>
            <returns>a new GuidList object</returns>
        </member>
        <member name="M:ISXWoW.GuidList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.GuidList`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>
            Gets an enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.GuidList`1.GetObject(System.Int32)">
            <summary>
            Retrieves a object from the GuidList
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.GuidList`1.Object(System.UInt32)">
            <summary>
            Returns a new WoWObject for specific item in the GuidList
            </summary>
            <param name="Nth">The Nth item to retrieve from the list (0-based)</param>
            <returns>A new WoWObject</returns>
        </member>
        <member name="P:ISXWoW.GuidList`1.Item(System.Int32)">
            <summary>
            Index to get an item out of the Guidlist.
            </summary>
            <param name="index">Index (0-based)</param>
            <returns></returns>
        </member>
        <member name="T:ISXWoW.GuidListEnumerator">
            <summary>
            Represents a GuidList enumerator
            </summary>
        </member>
        <member name="P:ISXWoW.GuidListEnumerator.GuidList">
            <summary>
            Gets the GUIDList object
            </summary>
        </member>
        <member name="P:ISXWoW.GuidListEnumerator.Position">
            <summary>
            Gets the position of the enumerator
            </summary>
        </member>
        <member name="T:ISXWoW.GuidListEnumerator`1">
            <summary>
            Represents a GuidList enumerator
            </summary>
        </member>
        <member name="M:ISXWoW.GuidListEnumerator`1.Dispose">
            <summary>
            Cleans up the enumerator object
            </summary>
        </member>
        <member name="P:ISXWoW.GuidListEnumerator`1.Current">
            <summary>
            Gets the current object in the enumeration
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.TalentInfo">
            <summary>
            Class that represents talent info.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TalentInfo.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Default constructor
            </summary>
            <param name="rawData">Raw data</param>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TalentInfo.Column">
            <summary>
            Gets the column the talent is on in the tree.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TalentInfo.CurrentRank">
            <summary>
            Gets current rank of the talent.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TalentInfo.MaxRank">
            <summary>
            Gets max possible rank for the talent.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TalentInfo.MeetsPrereq">
            <summary>
            Gets a value indicating whether or not the talent meets all pre-requisites.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TalentInfo.Name">
            <summary>
            Gets the name of the talent.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TalentInfo.Tier">
            <summary>
            Gets the teir the talent is on the tree.
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.TalentTabInfo">
            <summary>
            Class that represents talent tab info.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TalentTabInfo.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Default constructor
            </summary>
            <param name="rawData">Raw data</param>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TalentTabInfo.Name">
            <summary>
            Name of the talent tab.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TalentTabInfo.TalentsSpent">
            <summary>
            Number of talents spent in the talent tab.
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.TalentUI">
            <summary>
            Class that represents the TalentFrame frame
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TalentUI.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TalentUI.ConfirmWipe">
            <summary>
            Confirm the reset of talents.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TalentUI.GetTabInfo(System.Int32)">
            <summary>
            Get information about a talent tab.
            </summary>
            <param name="index">Tab index.</param>
            <returns>ISXWoW.WoWUI.Frames.TalentTabInfo</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TalentUI.GetTalentInfo(System.Int32,System.Int32)">
            <summary>
            Get information about a talent.
            </summary>
            <param name="tabIndex">Tab index.</param>
            <param name="talentIndex">Talent index.</param>
            <returns>ISXWoW.WoWUI.Frames.TalentInfo</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TalentUI.LearnTalent(System.Int32,System.Int32)">
            <summary>
            Learns a talent.
            </summary>
            <param name="tabIndex">Tab index.</param>
            <param name="talentIndex">Talent index.</param>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TalentUI.TabCount">
            <summary>
            Returns the number of tabs in the Talent frame.
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.LootFrame">
            <summary>
            The loot frame, using base UI members/methods at the moment
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.LootFrame.#ctor">
            <summary>
            Constructor for a loot frame
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.LootFrame.Slot(System.UInt32)">
            <summary>
            Used to select a loot window slot
            </summary>
            <param name="Nth">The Nth item in the list you want to retrieve an ItemInfo object about. (1 based)</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.LootFrame.LootButton(System.UInt32)">
            <summary>
            Returns the Nth loot item as a button. Valid values are 1-4. Using this method requires that you cycle through pages
            using the UpButton and Downbutton. 
            </summary>
            <param name="Nth">The Nth button to return</param>
            <returns>If something other than 1-4 are supplied, returns null</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.LootFrame.Close">
            <summary>
            Closes the window using lua
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.LootFrame.DownButton">
            <summary>
            The down button on the loot window. You should check for visibility before tampering
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.LootFrame.UpButton">
            <summary>
            The up button on the loot window. You should check for visibility before tampering
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.LootFrame.CloseButton">
            <summary>
            The close button on the loot window.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.LootFrame.ItemCount">
            <summary>
            The number of items in the frame (this includes coin)
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.LootFrame.ItemInfo">
            <summary>
            ItemInfo object returned from a loot slot
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.LootFrame.ItemInfo._Index">
            <summary>
            The held slot index for use with later LUA
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.LootFrame.ItemInfo._Icon">
            <summary>
            The Icon the item in this slot uses
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.LootFrame.ItemInfo._Name">
            <summary>
            The name of the current item
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.LootFrame.ItemInfo._Quantity">
            <summary>
            The quantity of this item
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.LootFrame.ItemInfo._Rarity">
            <summary>
            The items rarity
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.LootFrame.ItemInfo.#ctor(System.UInt32,System.String,System.String,System.UInt32,System.UInt32)">
            <summary>
            Construct a ItemInfo object from a loot frame
            </summary>
            <param name="index">The slot index</param>
            <param name="icon">The icon data for the item</param>
            <param name="name">The item name</param>
            <param name="quantity">The item quantity for this slot</param>
            <param name="rarity">The item rarity</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.LootFrame.ItemInfo.#ctor">
            <summary>
            Used for creating an empty ItemInfo object
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.LootFrame.ItemInfo.Loot">
            <summary>
            Used to confirm the looting of a BOP item,possibly even loot the item
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.LootFrame.ItemInfo.ConfirmRoll">
            <summary>
            Used to confirm a loot roll  
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.LootFrame.ItemInfo.Empty">
            <summary>
            Returns an empty ItemInfo object
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.LootFrame.ItemInfo.IsEmpty">
            <summary>
            Checks to see if the item is an empty one
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.LootFrame.ItemInfo.IsCoin">
            <summary>
            Returns true if the current index is coin, otherwise false
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.LootFrame.ItemInfo.IsItem">
            <summary>
            Returns true if the current index is an item, otherwise false
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.LootFrame.ItemInfo.Link">
            <summary>
            Makes a call to ItemLink.Parse with the link from this item index in the window, returning an ItemLink object or null if parsing was not successful
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.LootFrame.ItemInfo.Index">
            <summary>
            The current index, in case you forgot
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.LootFrame.ItemInfo.Icon">
            <summary>
            The icon path
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.LootFrame.ItemInfo.Name">
            <summary>
            The items name
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.LootFrame.ItemInfo.Quantity">
            <summary>
            The items quantity
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.LootFrame.ItemInfo.Rarity">
            <summary>
            The items rarity. 0 for grey, 1 for white items and quest items, 2 for green, 3 for blue, and so on
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.GossipFrame">
            <summary>
            The frame used for NPC interaction
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GossipFrame.Finalize">
            <summary>
            Destructor for this class, detach from events here
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GossipFrame.GetWorkingDictionary(ISXWoW.WoWUI.Frames.GossipFrame.GossipTypes)">
            <summary>
            Returns one of the option type dictionaries
            </summary>
            <param name="Option">The option to return the correct dictonary</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GossipFrame.BuildGossipList(System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            Returns a dictionary of the Current GossipPairs that were passed in
            </summary>
            <param name="OptionPairs">a List of Pairs of GossipOptions</param>
            <param name="PairType">0= Gossip, 1 = AvailableQuests, 2=ActiveQuests</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GossipFrame.GetNumOptions(ISXWoW.WoWUI.Frames.GossipFrame.GossipTypes)">
            <summary>
            Returns the number of options of the specified type
            </summary>
            <param name="Option">The option type you want to know the count of</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GossipFrame.HasOption(ISXWoW.WoWUI.Frames.GossipFrame.GossipTypes)">
            <summary>
            Returns true if one or more options of the specified type are available to select
            </summary>
            <param name="Option">The GossipOptions.Type to count</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GossipFrame.SelectGossipOption(System.UInt32)">
            <summary>
            Selects a gossip option, Available/Active quests are not included
            </summary>
            <param name="Nth">The Nth gossip option to select</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GossipFrame.SelectGossipOption(System.String)">
            <summary>
            Attempts to select a gossip option by text
            </summary>
            <param name="Text">The text to try to find and select</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GossipFrame.SelectActiveQuest(System.UInt32)">
            <summary>
            Selects a Active Quest option, All other options are not included
            </summary>
            <param name="Nth">The Nth Active Quest option to select</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GossipFrame.SelectActiveQuest(System.String)">
            <summary>
            Attempts to select a Active option by text
            </summary>
            <param name="Text">The text to try to find and select</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GossipFrame.SelectAvailableQuest(System.UInt32)">
            <summary>
            Selects a Available Quest option, All other options are not included
            </summary>
            <param name="Nth">The Nth Available Quest option to select</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GossipFrame.SelectAvailableQuest(System.String)">
            <summary>
            Attempts to select a Active option by text
            </summary>
            <param name="Text">The text to try to find and select</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GossipFrame.SelectOption(ISXWoW.WoWUI.Frames.GossipFrame.GossipTypes)">
            <summary>
            Select option based on type, implicit Nth of 1
            </summary>
            <param name="Option">A Gossip Type to select</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GossipFrame.SelectOption(ISXWoW.WoWUI.Frames.GossipFrame.GossipTypes,System.UInt32)">
            <summary>
            Selects the Nth option of a specific GossipType
            </summary>
            <param name="Option">GossipType to select</param>
            <param name="Nth">Nth to select of the specified GossipType</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.GossipFrame.CloseFrame">
            <summary>
            Uses LUA to close the frame
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.GossipFrame.GetTotalOptions">
            <summary>
            Returns the number of total options to select from (combines all option types)
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.GossipFrame.GetNumAvailableQuests">
            <summary>
            Returns the number of Available quest options
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.GossipFrame.GetNumActiveQuests">
            <summary>
            Returns the number of Active quest options
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.GossipFrame.Text">
            <summary>
            Returns the Gossip text, if any
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.GossipFrame.GossipOption.Text">
            <summary>
            Text string of this option
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.GossipFrame.GossipOption.TypeText">
            <summary>
            The text of the specific type. e.g. "vendor" for Vendor type, but "60" for a quest type (gives you the level for the quest)
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.GossipFrame.GossipOption.GossipType">
            <summary>
            The type of gossip option. e.g. GossipTypes.Vendor for a "vendor" option 
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.GossipFrame.GossipTypes">
            <summary>
            The types used for what the option will give you
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.GossipFrame.GossipTypes.Vendor">
            <summary>
            This NPC can vendor
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.GossipFrame.GossipTypes.Trainer">
            <summary>
            This NPC can Train skills (class, profession, etc)
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.GossipFrame.GossipTypes.ActiveQuest">
            <summary>
            This NPC has a quest that you are current on or finished
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.GossipFrame.GossipTypes.AvailableQuest">
            <summary>
            This NPC has new quests that you can do
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.GossipFrame.GossipTypes.Gossip">
            <summary>
            This NPC can ramble about nothing you particularly care about
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.GossipFrame.GossipTypes.Binder">
            <summary>
            This NPC can bind you to this location (typically Innkeepers)
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.GossipFrame.GossipTypes.Taxi">
            <summary>
            This NPC can fly you the hell out of dodge
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.GossipFrame.GossipTypes.Banker">
            <summary>
            This NPC can hold your money and item, reap interest while doing so and give you nothing in return
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.GossipFrame.GossipTypes.Battlemaster">
            <summary>
            This NPC can send you to the battlegrounds
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.ClassTrainerFrame">
            <summary>
            Frame used for class trainers/skill trainers
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.ClassTrainerFrame._CurrentFilter">
            <summary>
            The current filter applied to the trainer window, not yet in use
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.ClassTrainerFrame._TRAINER_SHOW">
            <summary>
            Holds the TRAINER_SHOW event ID
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.ClassTrainerFrame._TRAINER_UPDATE">
            <summary>
            Holds the TRAINER_UPDATE event ID
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.ClassTrainerFrame._TRAINER_SHOW_TARGET">
            <summary>
            Holds the EventTarget to be used for TRAINER_UPDATE and TRAINER_SHOW events
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.ClassTrainerFrame.#ctor">
            <summary>
            ClassTrainer constructor
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.ClassTrainerFrame.Finalize">
            <summary>
            Destructor, detach from events used here
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.ClassTrainerFrame.Skill(System.UInt32)">
            <summary>
            Returns a SkillInfo object for the Nth skill/ability item the trainer has. Headers are included.
            (Note: Indexes can differ based on the trainer sort options)
            </summary>
            <param name="Nth"></param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.ClassTrainerFrame.Close">
            <summary>
            Closes the trainer window using lua
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SetTrainerFilter(ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillTypes,System.Boolean)">
            <summary>
            Accepts Used, Available and Unavailable types only. Used to show/hide those categories
            </summary>
            <param name="filter">The filter you wish to change</param>
            <param name="Show">Pass true to show the specified filter, false to hide</param>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ClassTrainerFrame.UsedButton">
            <summary>
            Shows "Used" skills
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ClassTrainerFrame.UnavailableButton">
            <summary>
            Shows "Unavailable" skills
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ClassTrainerFrame.AvailableButton">
            <summary>
            Shows "Available" skills
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ClassTrainerFrame.TrainButton">
            <summary>
            Train button used for training the currently selected skill
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ClassTrainerFrame.CloseButton">
            <summary>
            Close button for closing the trainer window
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ClassTrainerFrame.CollapseAllButton">
            <summary>
            CollapseAll button used for expanding and collapsing all skills
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ClassTrainerFrame.IsTradeSkillTrainer">
            <summary>
            Returns true if this trainer trains Tradeskills
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ClassTrainerFrame.IsTalentTrainer">
            <summary>
            Returns true if this trainer trains Talents
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ClassTrainerFrame.ServiceCount">
            <summary>
            Get the number of the trainer services. 
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SelectedIndex">
            <summary>
            Returns the index of the selected item in the window
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillTypes">
            <summary>
            Enum used for the different skill types. None is meant for internal use for empty comparison.
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillTypes.Empty">
            <summary>
            No skill type
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillTypes.Used">
            <summary>
            Skills already known
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillTypes.Available">
            <summary>
            Skills available to be trained
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillTypes.Unavailable">
            <summary>
            Skills not available until a higher level
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillTypes.Header">
            <summary>
            This skill is a header in the window
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfoRequirement">
            <summary>
            Custom class used for returning skill requirements
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfoRequirement._Skill">
            <summary>
            The skill line required
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfoRequirement._Level">
            <summary>
            The level of the skill line required
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfoRequirement.#ctor(System.String,System.UInt32)">
            <summary>
            Used to create a new skill requirement object
            </summary>
            <param name="skill">The skill line required</param>
            <param name="level">The level of the skill line required</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfoRequirement.#ctor">
            <summary>
            Used to create an empty skill requirement object
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfoRequirement.Empty">
            <summary>
            Returns an empty SkillInfoRequirement class, can be used in comparisons for testing if you received a valid object
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfoRequirement.IsEmpty">
            <summary>
            Checks to see if the item is an empty one
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfoRequirement.Skill">
            <summary>
            The skill line required 
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfoRequirement.Level">
            <summary>
            The level of the skill line required
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo">
            <summary>
            Custom class for holding info about a trainer skill
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo._Index">
            <summary>
            The index of the current skill, in case you forgot
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo._Name">
            <summary>
            The name of the skill
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo._Rank">
            <summary>
            The rank of the skill
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo._Category">
            <summary>
            The category of the skill (whether it is used/unavailable/available to train
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo._Expanded">
            <summary>
            Used for expandable headers
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo.#ctor(System.UInt32,System.String,System.UInt32,ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillTypes,System.Boolean)">
            <summary>
            Constructor to create a SkillInfo object
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo.#ctor">
            <summary>
            Private constructor used for creating an empty object
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo.Empty">
            <summary>
            Returns an empty SkillInfo object
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo.IsEmpty">
            <summary>
            Checks to see if the skill is an empty one
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo.AbilityRequirement(System.UInt32)">
            <summary>
            Returns a SkillInfoRequirement with the Nth requiement of the current Ability, otherwise an Empty SkillInfoRequirement object.
            (Note: This function is coded for how it is thought to work, untested)
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo.Expand">
            <summary>
            Expands the category if it is a header, otherwise does nothing
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo.Collapse">
            <summary>
            Collapses the category if it is a header, otherwise does nothing
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo.Learn">
            <summary>
            Learns this skill, given you got the dough!
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo.Name">
            <summary>
            The name of the skill
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo.Rank">
            <summary>
            The rank of the skill
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo.Category">
            <summary>
            The category of the skill (whether it is used/unavailable/available to train
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo.Expanded">
            <summary>
            Used for expandable headers. Returns true if it is expanded, otherwise false
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo.SkillRequirement">
            <summary>
            Returns a SkillInfoRequirement with the requiement of the current skill, otherwise an Empty SkillInfoRequirement object
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo.AbilityRequirementCount">
            <summary>
            Get the maximum number of requirements that AbilityRequirement() has. 
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo.Description">
            <summary>
            Returns the description of a specific trainer service
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo.IsHeader">
            <summary>
            Returns true if the current SkillInfo is a header, not an actual skill
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo.Cost">
            <summary>
            Returns the cost of a specific trainer service. (In Copper)
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo.Icon">
            <summary>
            Gets the icon path for this item (Might be headers only)
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ClassTrainerFrame.SkillInfo.LevelRequirement">
            <summary>
            Get the required level to learn the skill. 
            </summary>
        </member>
        <member name="M:ISXWoW.WoWAction.Use">
            <summary>
            Use the action
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWAction.Active">
            <summary>
            Gets a value that indicates if the action is toggled to active
            </summary>
        </member>
        <member name="P:ISXWoW.WoWAction.AutoRepeat">
            <summary>
            Returns true if the action is set to auto-repeat
            </summary>
        </member>
        <member name="P:ISXWoW.WoWAction.Cooldown">
            <summary>
            Returns the cooldown of the action
            </summary>
        </member>
        <member name="P:ISXWoW.WoWAction.FullID">
            <summary>
            Returns the full ID of the action
            </summary>
        </member>
        <member name="P:ISXWoW.WoWAction.ID">
            <summary>
            Returns the ID of the action
            </summary>
        </member>
        <member name="P:ISXWoW.WoWAction.Name">
            <summary>
            Returns the name of the action
            </summary>
        </member>
        <member name="P:ISXWoW.WoWAction.Slot">
            <summary>
            Returns the slot the action is currently in
            </summary>
        </member>
        <member name="P:ISXWoW.WoWAction.Type">
            <summary>
            Returns the type of the action
            </summary>
        </member>
        <member name="P:ISXWoW.WoWAction.Usable">
            <summary>
            Returns true if the action is currently usable
            </summary>
        </member>
        <member name="M:ISXWoW.WoWQuest.RequiredSlaughter(System.Int32)">
            <summary>
            
            </summary>
            <param name="N"></param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWQuest.RequiredSlaughterCount(System.Int32)">
            <summary>
            
            </summary>
            <param name="N"></param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWQuest.RequiredItemID(System.Int32)">
            <summary>
            
            </summary>
            <param name="N"></param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWQuest.RequiredItem(System.Int32)">
            <summary>
            
            </summary>
            <param name="N"></param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWQuest.RequiredItemCount(System.Int32)">
            <summary>
            
            </summary>
            <param name="N"></param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWQuest.RewardItemID(System.Int32)">
            <summary>
            
            </summary>
            <param name="N"></param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWQuest.RewardItem(System.Int32)">
            <summary>
            
            </summary>
            <param name="N"></param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWQuest.RewardItemCount(System.Int32)">
            <summary>
            
            </summary>
            <param name="N"></param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWQuest.RewardItemChoiceID(System.Int32)">
            <summary>
            
            </summary>
            <param name="N"></param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWQuest.RewardItemChoice(System.Int32)">
            <summary>
            
            </summary>
            <param name="N"></param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWQuest.RewardItemChoiceCount(System.Int32)">
            <summary>
            
            </summary>
            <param name="N"></param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWQuest.CurrentSlaughterCount(System.Int32)">
            <summary>
            The current slaughter count for a mobs on this quest.
            </summary>
            <param name="N"></param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWQuest.Get(System.String[])">
            <summary>
            
            </summary>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWQuest.Area">
            <summary>
            
            </summary>
        </member>
        <member name="P:ISXWoW.WoWQuest.AreaID">
            <summary>
            
            </summary>
        </member>
        <member name="P:ISXWoW.WoWQuest.ID">
            <summary>
            
            </summary>
        </member>
        <member name="P:ISXWoW.WoWQuest.IsDungeon">
            <summary>
            
            </summary>
        </member>
        <member name="P:ISXWoW.WoWQuest.IsElite">
            <summary>
            
            </summary>
        </member>
        <member name="P:ISXWoW.WoWQuest.Level">
            <summary>
            
            </summary>
        </member>
        <member name="P:ISXWoW.WoWQuest.PreviousQuestID">
            <summary>
            
            </summary>
        </member>
        <member name="P:ISXWoW.WoWQuest.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:ISXWoW.WoWQuest.NextQuestID">
            <summary>
            
            </summary>
        </member>
        <member name="P:ISXWoW.WoWQuest.RequiredMoney">
            <summary>
            
            </summary>
        </member>
        <member name="P:ISXWoW.WoWQuest.RequiredSlaughters">
            <summary>
            
            </summary>
        </member>
        <member name="P:ISXWoW.WoWQuest.RequiredItems">
            <summary>
            
            </summary>
        </member>
        <member name="P:ISXWoW.WoWQuest.RewardItems">
            <summary>
            
            </summary>
        </member>
        <member name="P:ISXWoW.WoWQuest.RewardItemChoices">
            <summary>
            
            </summary>
        </member>
        <member name="P:ISXWoW.WoWQuest.RewardMoney">
            <summary>
            
            </summary>
        </member>
        <member name="T:ISXWoW.WoWLootWindow">
            <summary>
            This class is meant for use with the Looting window used to loot off corpses, dynamic objects, etc.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWLootWindow.#ctor">
            <summary>
            This can be used instead of calling the static .Get method for a new loot window object
            </summary>
        </member>
        <member name="M:ISXWoW.WoWLootWindow.#ctor(LavishScriptAPI.LavishScriptObject)">
            <summary>
            Create your own type of constructor, not meant for public use
            </summary>
            <param name="lavishObj"></param>
        </member>
        <member name="M:ISXWoW.WoWLootWindow.Close">
            <summary>
            Executes a Close operation on the current loot window
            </summary>
        </member>
        <member name="M:ISXWoW.WoWLootWindow.Get">
            <summary>
            Static method to return a new LootWindow Object
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWLootWindow.GetItemName(System.Int32)">
            <summary>
            Gets the name of the item from the supplied slot index 1 based
            </summary>
            <param name="slot">The loot slot to get the item name of, 1 based</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWLootWindow.GetItemQuality(System.Int32)">
            <summary>
            Gets the quality of the item from the supplied slot index 1 based
            </summary>
            <param name="slot">The loot slot to get the item quality of, 1 based</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWLootWindow.GetItemQuantity(System.Int32)">
            <summary>
            Gets the quantity of the item from the supplied slot index 1 based
            </summary>
            <param name="slot">The loot slot to get the item quantity of, 1 based</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWLootWindow.GetItemRarity(System.Int32)">
            <summary>
            Gets the rarity of the item from the supplied slot index 1 based
            </summary>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWLootWindow.LootItem(System.Int32)">
            <summary>
            Loots an item from the supplied slot, 1 based
            </summary>
            <param name="slot">The slot to loot 1 based</param>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWLootWindow.CoinSlot">
            <summary>
            Returns the index that the coinslot is in, if any
            </summary>
        </member>
        <member name="P:ISXWoW.WoWLootWindow.IsOpen">
            <summary>
            Returns true if the lootwindow is open, false otherwise
            </summary>
        </member>
        <member name="P:ISXWoW.WoWLootWindow.ItemCount">
            <summary>
            The number of unique items on the corpse
            </summary>
        </member>
        <member name="T:ISXWoW.WoWGameObject">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISXWoW.WoWGameObject.#ctor(System.String[])">
            <summary>
            
            </summary>
            <param name="search"></param>
        </member>
        <member name="M:ISXWoW.WoWGameObject.#ctor(LavishScriptAPI.LavishScriptPersistentObject)">
            <summary>
            
            </summary>
            <param name="lavishObj"></param>
        </member>
        <member name="M:ISXWoW.WoWGameObject.Get(System.String[])">
            <summary>
            
            </summary>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWGameObject.DisplayID">
            <summary>
            
            </summary>
        </member>
        <member name="P:ISXWoW.WoWGameObject.CanUse">
            <summary>
            Returns true if the object can be used
            </summary>
        </member>
        <member name="P:ISXWoW.WoWGameObject.GotBite">
            <summary>
            Returns true if the object has a fish biting
            </summary>
        </member>
        <member name="P:ISXWoW.WoWGameObject.Level">
            <summary>
            Returns the level of the object
            </summary>
        </member>
        <member name="P:ISXWoW.WoWGameObject.Locked">
            <summary>
            Returns true if the itme is locked (must be picked)
            </summary>
        </member>
        <member name="P:ISXWoW.WoWGameObject.SubType">
            <summary>
            Returns the sub type of the object
            </summary>
        </member>
        <member name="M:ISXWoW.WoWEvents.Dispose">
            <summary>
            Performs cleanup; Detaches all events
            </summary>
        </member>
        <member name="T:ISXWoW.ItemLink">
            <summary>
            Item links in game can be visualized by this class, parsing and breaking it down into workable types
            </summary>
        </member>
        <member name="M:ISXWoW.ItemLink.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Internal blank ctor, if they already have the values there is no current need to construct one
            </summary>
        </member>
        <member name="M:ISXWoW.ItemLink.ToString">
            <summary>
            Returns the whole item link as a string, same a ItemLink.Link
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.ItemLink.Parse(System.String)">
            <summary>
            Attempts to parse the item link, returns true if successful
            </summary>
            <param name="linkString"></param>
            <returns>True if the link was parsed, otherwise false</returns>
        </member>
        <member name="M:ISXWoW.ItemLink.ParseChunks(System.String,System.String[],System.String[])">
            <summary>
            Takes the broken down pieces and returns a pieced together ItemLink
            </summary>
            <param name="linkString">The whole link string</param>
            <param name="bigChunk">The regex result set</param>
            <param name="littleChunk">The item link split using a ':'</param>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.ItemLink.Link">
            <summary>
            Returns the whole item link as a string, same as ToString()
            </summary>
        </member>
        <member name="P:ISXWoW.ItemLink.Name">
            <summary>
            The name of the item
            </summary>
        </member>
        <member name="P:ISXWoW.ItemLink.ColorCode">
            <summary>
            Returns the color code of the link, including Alpha values, e.g. ff9d9d9d for a grey item
            </summary>
        </member>
        <member name="P:ISXWoW.ItemLink.Declarative">
            <summary>
            Returns the declarative portion of the item link
            For example, if the item link was '|cff9d9d9d|Hitem:4865:0:0:0:0:0:0:1715803284|h[Ruined Pelt]|h|r'
            then "item" would be returned
            </summary>
        </member>
        <member name="P:ISXWoW.ItemLink.Entry">
            <summary>
            The items Entry ID
            </summary>
        </member>
        <member name="P:ISXWoW.ItemLink.UniqueId">
            <summary>
            The unique ID added to the end of the item. Typically used to display dynamic data.
            Typically to display who crafted the item, or used if a new item is added to the game without a client patch.
            If the latter, the client can still properly display the item by using data within the UniqueId
            </summary>
        </member>
        <member name="P:ISXWoW.ItemLink.SuffixId">
            <summary>
            The items suffix ID, used for "of the monkey", "of the whale", "of the Red-One", etc
            </summary>
        </member>
        <member name="P:ISXWoW.ItemLink.JewelId4">
            <summary>
            The ID of the 4th Gem slot on this item, otherwise 0
            </summary>
        </member>
        <member name="P:ISXWoW.ItemLink.JewelId3">
            <summary>
            The ID of the 3rd Gem slot on this item, otherwise 0
            </summary>
        </member>
        <member name="P:ISXWoW.ItemLink.JewelId2">
            <summary>
            The ID of the 2nd Gem slot on this item, otherwise 0
            </summary>
        </member>
        <member name="P:ISXWoW.ItemLink.JewelId1">
            <summary>
            The ID of the 1st Gem slot on this item, otherwise 0
            </summary>
        </member>
        <member name="P:ISXWoW.ItemLink.EnchantId">
            <summary>
            The ID of the enchant on this item, otherwise 0
            </summary>
        </member>
        <member name="T:ISXWoW.WoWGroup">
            <summary>
            Represents members and methods for you and your group
            </summary>
        </member>
        <member name="M:ISXWoW.WoWGroup.#ctor">
            <summary>
            Get a new instance of the WoWGroup object, recommended
            </summary>
        </member>
        <member name="M:ISXWoW.WoWGroup.#ctor(LavishScriptAPI.LavishScriptPersistentObject)">
            <summary>
            A "Build your own" wowgroup supplying your own LSPO, (Advanced)
            </summary>
            <param name="lavishObj"></param>
        </member>
        <member name="M:ISXWoW.WoWGroup.Get">
            <summary>
            Gets a new instance of the WoWGroup object, (Recommended)
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWGroup.GetGroupMember(System.Int32)">
            <summary>
            Retrieves a player from the group
            </summary>
            <param name="partyIndex">Index of party member (0 based)</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWGroup.GetGroupMemberName(System.Int32)">
            <summary>
            Retrives the player name of a group member
            </summary>
            <param name="partyIndex">Index of party member (0 based)</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWGroup.Member(System.Int32)">
            <summary>
            Returns a WoWPlayer object at nth index
            </summary>
            <param name="memberNumber">Member index</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWGroup.MemberName(System.Int32)">
            <summary>
            Returns the member name at nth index
            </summary>
            <param name="memberNumber">Member index</param>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWGroup.Item(System.Int32)">
            <summary>
            Gets a player in the group
            </summary>
            <param name="index">Index of party member (0 based)</param>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWGroup.Leader">
            <summary>
            Returns the WoWPlayer object for the leader of the group
            </summary>
        </member>
        <member name="P:ISXWoW.WoWGroup.LeaderName">
            <summary>
            Returns the group leader's name
            </summary>
        </member>
        <member name="P:ISXWoW.WoWGroup.MemberCount">
            <summary>
            Returns the number of people in the group
            </summary>
        </member>
        <member name="P:ISXWoW.WoWGroup.LootType">
            <summary>
            Returns the looting type
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.MerchantFrame">
            <summary>
            WoW Merchant frame, used when at any NPC that can buy/sell
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.MerchantFrame._MERCHANT_SHOW">
            <summary>
            Holds the eventID for MERCHANT_SHOW event
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.MerchantFrame._MERCHANT_UPDATE">
            <summary>
            Holds the eventID for MERCHANT_UPDATE event
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.MerchantFrame._MERCHANT_SHOW_TARGET">
            <summary>
            The Lavishscript EventTarget (function to be called)
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MerchantFrame.#ctor">
            <summary>
            Constructor for the merchant frame
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MerchantFrame.Finalize">
            <summary>
            Destructor for the merchant frame, must detach from any events here
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MerchantFrame.MERCHANT_SHOW(System.Object,LavishScriptAPI.LSEventArgs)">
            <summary>
            This fires when an MERCHANT_SHOW or MERCHANT_UPDATE event happens in game
            </summary>
            <param name="sender">the objec that raised the event</param>
            <param name="e">The argument object being sent</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MerchantFrame.BuyItem(System.UInt32,System.UInt32)">
            <summary>
            Purchase an item from the vendor (Specific Qty)
            </summary>
            <param name="Nth">The 1-based item index to purchase</param>
            <param name="Qty">The Quantity to purchase (Just like right clicking 'Qty' times on the item</param>
            <returns>Returns true on success, otherwise false</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MerchantFrame.BuyItem(System.UInt32)">
            <summary>
            Purchase an item from the vendor (Qty 1) based on index
            </summary>
            <param name="Nth">The 1-based item index to purchase.</param>
            <returns>Returns true on success, otherwise false</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MerchantFrame.BuyItem(System.String)">
            <summary>
            Purchase an item from the vendor (Qty 1) based on name (case insensitive)
            </summary>
            <param name="ItemName">The name of the item to purchase</param>
            <returns>Returns true on success, otherwise false</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MerchantFrame.BuyItem(System.String,System.UInt32)">
            <summary>
            Purchase an item from the vendor (Specific Qty) based on name (case insensitive)
            </summary>
            <param name="ItemName">The name of the item to purchase</param>
            <param name="Qty">The quantity of this item to buy (Each Qty you specifiy 
            is the same as right clicking on the item. So if the vendor sells in stacks of 5, Qty of 1 will get you 5. Qty of 2 will get you 10, etc)</param>
            <returns>Returns true on success, otherwise false</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MerchantFrame.GetItemCostInfo(System.Int32)">
            <summary>
            Gets the cost information for a given item
            </summary>
            <param name="index">Merchant item index (1-based)</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MerchantFrame.GetItemCostItem(System.Int32,System.Int32)">
            <summary>
            Gets the cost item information for a given item
            </summary>
            <param name="index">Merchant item index (1-based)</param>
            <param name="itemIndex">Cost item index (1-based)</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MerchantFrame.GetItemLink(System.Int32)">
            <summary>
            Gets the item link for a given item
            </summary>
            <param name="index">Merchant item index (1-based)</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MerchantFrame.RepairAll">
            <summary>
            Does an explicit HasRepair check, and if true, attempts to do a repair all and returns true. Otherwise, returns false.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MerchantFrame.Item(System.UInt32)">
            <summary>
            Returns an ItemInfo object of the Nth item the vendor has
            </summary>
            <param name="Nth">The Nth merchant item to return an ItemInfo object for</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MerchantFrame.CloseFrame">
            <summary>
            Closes the merchant frame
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.MerchantFrame.RepairAllCost">
            <summary>
            Gets the cost of Repairing all items on your doll and inventory
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.MerchantFrame.HasRepair">
            <summary>
            If the merchanct is capable of repairing returns true, otherwise false.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.MerchantFrame.ItemCount">
            <summary>
            Returns the number of items the merchant has for sale
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.MerchantFrame.PrevPage">
            <summary>
            The previous item list button on the merchant frame
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.MerchantFrame.NextPage">
            <summary>
            The next item list button on the merchant frame
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.MerchantFrame.MerchantItemsPerPage">
            <summary>
            Returns the number of merchant items per page, using LUA data
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.MerchantFrame.ItemInfo">
            <summary>
            Our custom ItemInfo object for merchant items
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.MerchantFrame.ItemInfo._Index">
            <summary>
            The index of this item in the frame
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.MerchantFrame.ItemInfo._Name">
            <summary>
            The item name
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.MerchantFrame.ItemInfo._Texture">
            <summary>
            The item texture path
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.MerchantFrame.ItemInfo._Price">
            <summary>
            The item price
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.MerchantFrame.ItemInfo._Quantity">
            <summary>
            The item quantity
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.MerchantFrame.ItemInfo._NumAvailable">
            <summary>
            Number availalbe
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.MerchantFrame.ItemInfo._IsUsable">
            <summary>
            If the current race/class can use/equip the item
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.MerchantFrame.ItemInfo._ExtendedCost">
            <summary>
            Provides extended item info that is not current used. (PVP) cost info
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.MerchantFrame.ItemInfo.#ctor(System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Constructor used to create an ItemInfo object for developers using the .NET api
            </summary>
            <param name="name">The item name</param>
            <param name="texture">The item texture path</param>
            <param name="price">The item price</param>
            <param name="quantity">The item quantity</param>
            <param name="numavailable">Number availalbe</param>
            <param name="isuseable">If the current race/class can use/equip the item</param>
            <param name="extendedcost">Provides extended item info that is not current used. (PVP) cost info</param>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.MerchantFrame.ItemInfo.Name">
            <summary>
            Item name
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.MerchantFrame.ItemInfo.Texture">
            <summary>
            Texture file
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.MerchantFrame.ItemInfo.Price">
            <summary>
            Cost of the item, in copper
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.MerchantFrame.ItemInfo.Quantity">
            <summary>
            Amount that will be purchased
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.MerchantFrame.ItemInfo.Available">
            <summary>
            Total available, -1 for infinite
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.MerchantFrame.ItemInfo.IsUseable">
            <summary>
            True if the character can use the item, otherwise false
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.MerchantFrame.ItemInfo.ExtendedCost">
            <summary>
            True if this has extended (PVP) cost info
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ItemCostInfo.ArenaPoints">
            <summary>
            Gets the count of arena points needed
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ItemCostInfo.HonorPoints">
            <summary>
            Gest the count of honor points needed
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ItemCostInfo.ItemCount">
            <summary>
            Gets the count of distinct items not the number of each item needed
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ItemCostItem.Count">
            <summary>
            Gest the count
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.ItemCostItem.ItemTexture">
            <summary>
            Gets the item's texture name
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.CreateCharacterRace.Available">
            <summary>
            Gets a value indicating whether or not the race is available for use
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.CreateCharacterRace.Race">
            <summary>
            Gets a WoWRace object representing the race
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.CreateCharacterRace.LongName">
            <summary>
            Gets the long name
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.CharacterCreateUI.CreateCharacter">
            <summary>
            Creates a character using the name in the edit box
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.CharacterCreateUI.Back">
            <summary>
            Exists the character create frame
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.CharacterCreateUI.CreateCharacter(System.String)">
            <summary>
            Creates a character with a supplied name
            </summary>
            <param name="name">Name of character to create</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.CharacterCreateUI.GetRandomName">
            <summary>
            Returns a randomly generated name
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.CharacterCreateUI.IsClassAvailable(ISXWoW.WoWClass)">
            <summary>
            Checks whether or not a class is available for the currently selected race
            NOTE: Returns index of available class button, if it isn't available it returns -1
            </summary>
            <param name="wowClass">Class to check against</param>
            <returns>bool</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.CharacterCreateUI.Open">
            <summary>
            Opens the create character glue frame
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.CharacterCreateUI.RandomizeAppearence">
            <summary>
            Randomizes the character's appearance
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.CharacterCreateUI.AvailableRaces">
            <summary>
            Gets a list of available races
            NOTE: This doesn't ecluse races you don't have access to
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.CharacterCreateUI.ClassCount">
            <summary>
            Gets a value indicating how many classes are currently available for the selected class
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.CharacterCreateUI.Name">
            <summary>
            Gets or sets the character name
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.CharacterCreateUI.RaceCount">
            <summary>
            Gets a value indicating how many races are currently available
            NOTE: This does NOT exclude races you cannot select
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.CharacterCreateUI.RandomName">
            <summary>
            Gets a random name
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.CharacterCreateUI.SelectedClass">
            <summary>
            Gets or sets the current selected class
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.CharacterCreateUI.SelectedGender">
            <summary>
            Gets or sets the current selected gender
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.CharacterCreateUI.SelectedRace">
            <summary>
            Gets or sets the current selected race
            </summary>
        </member>
        <member name="T:ISXWoW.WoWDynamicGameObject">
            <summary>
            
            </summary>
        </member>
        <member name="M:ISXWoW.WoWDynamicGameObject.#ctor(System.String[])">
            <summary>
            
            </summary>
            <param name="search"></param>
        </member>
        <member name="M:ISXWoW.WoWDynamicGameObject.#ctor(LavishScriptAPI.LavishScriptPersistentObject)">
            <summary>
            
            </summary>
            <param name="lavishObj"></param>
        </member>
        <member name="M:ISXWoW.WoWDynamicGameObject.Get(System.String[])">
            <summary>
            
            </summary>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWDynamicGameObject.Caster">
            <summary>
            
            </summary>
        </member>
        <member name="P:ISXWoW.WoWDynamicGameObject.Radius">
            <summary>
            
            </summary>
        </member>
        <member name="P:ISXWoW.WoWDynamicGameObject.Spell">
            <summary>
            
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.TradeSkillFrame">
            <summary>
            The frame used for doing tradeskill combines
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TradeSkillFrame.#ctor">
            <summary>
            Constructor for the tradeskill frame, setting up our events
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TradeSkillFrame.Finalize">
            <summary>
            Destructor used for detaching from events
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TradeSkillFrame.CRAFT_SHOW(System.Object,LavishScriptAPI.LSEventArgs)">
            <summary>
            Target for our event
            </summary>
            <param name="sender">object that caused the event</param>
            <param name="e">The arguments it is passing along</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TradeSkillFrame.GetTradeSkill">
            <summary>
            Returns what current tradeskill window they have up and grabs their current and max skill for it
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TradeSkillFrame.MakeRecipe(System.UInt32,System.UInt32)">
            <summary>
            Attempts to create the given recipe index(Nth) a specified number of times (Qty)
            </summary>
            <param name="Nth">The Recipe index to attempt to create</param>
            <param name="Qty">The number of times to create this recipe</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TradeSkillFrame.MakeRecipe(System.UInt32)">
            <summary>
            Attempts to create the given recipe index(Nth)
            </summary>
            <param name="Nth">The Recipe index to attempt to create</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TradeSkillFrame.MakeRecipe(System.String,System.UInt32)">
            <summary>
            Attempts to create the given recipe by name, a specified number of times (Qty)
            </summary>
            <param name="RecipeName">The Recipe name to attempt to find, and then create</param>
            <param name="Qty">The number of times to create this recipe, if found</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TradeSkillFrame.MakeRecipe(System.String)">
            <summary>
            Attempts to create the given recipe by name
            </summary>
            <param name="RecipeName">The Recipe name to attempt to find, and then create</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TradeSkillFrame.IsCurrentTradeSkill(ISXWoW.WoWUI.Frames.TradeSkillFrame.TradeSkillTypes)">
            <summary>
            Checks if the current or last tradeskill data is of a certain type
            </summary>
            <param name="TypeToCheck">The tradeskill type to check</param>
            <returns>True if the current or last tradeskill accessed equals TypeToCheck, otherwise false</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TradeSkillFrame.RecipeItem(System.UInt32)">
            <summary>
            Returns a RecipeInfo object for the suppliedindex (1-based)
            </summary>
            <param name="Nth">The Nth recipe item to obtain (Includes headers)</param>
            <returns>Name is an empty string, difficulty stays at 'header', available is -1, expanded is false if not found </returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TradeSkillFrame.RecipeItem(System.String)">
            <summary>
            Returns a RecipeInfo object for the named recipe if a match is found, otherwise returns an empty RecipeInfo object
            </summary>
            <param name="RecipeName">The recipe name to match (case insensitive</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TradeSkillFrame.CloseFrame">
            <summary>
            Uses LUA to close the tradeskill frame
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TradeSkillFrame.CurrentSkillLevel">
            <summary>
            The current skill level of this tradeskill
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TradeSkillFrame.CurrentSkillMax">
            <summary>
            The max level that this skill can be raised to
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TradeSkillFrame.CurrentIndex">
            <summary>
            Returns the current selected tradeskill index according to the frame
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TradeSkillFrame.FirstIndex">
            <summary>
            Returns the index of the first non-header trade skill entry. 
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TradeSkillFrame.RecipeCount">
            <summary>
            Get the number of trade skill entries (including headers).
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TradeSkillFrame.CollapseAll">
            <summary>
            The CollapseAll Button
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TradeSkillFrame.Create">
            <summary>
            Create button
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TradeSkillFrame.CreateAll">
            <summary>
            Create All Button
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TradeSkillFrame.Exit">
            <summary>
            Exit button
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TradeSkillFrame.Decrement">
            <summary>
            Decrement, or left arrow button (the amount you want to create)
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TradeSkillFrame.Increment">
            <summary>
            Increment, or right arrow button (the amount you want to create)
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TradeSkillFrame.Close">
            <summary>
            The X button to close the frame
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.TradeSkillFrame.DifficultyTypes">
            <summary>
            The stats returned for each item in the frame by WoW's LUA
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.TradeSkillFrame.DifficultyTypes.Header">
            <summary>
            If it is a header
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.TradeSkillFrame.DifficultyTypes.Trivial">
            <summary>
            Grey
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.TradeSkillFrame.DifficultyTypes.Easy">
            <summary>
            Green
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.TradeSkillFrame.DifficultyTypes.Medium">
            <summary>
            Yellow
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.TradeSkillFrame.DifficultyTypes.Optimal">
            <summary>
            Orange
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.TradeSkillFrame.DifficultyTypes.Difficult">
            <summary>
            Red
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.TradeSkillFrame.ReagentInfo">
            <summary>
            Returned for each tradeskill that has reagents to create the item (most everything)
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TradeSkillFrame.ReagentInfo.#ctor(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Internal constructor since this is object is only needed to be created by this frame
            </summary>
            <param name="name">The name of the reagent</param>
            <param name="texture">The texture path the icon uses</param>
            <param name="needed">The quantity of this reagent needed</param>
            <param name="onhand">The quantity current in inventory</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TradeSkillFrame.ReagentInfo.Empty">
            <summary>
            Returns a blank or empty ReagentInfo object
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TradeSkillFrame.ReagentInfo.Exists">
            <summary>
            Returns true if this Recipe exists, false otherwise
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TradeSkillFrame.ReagentInfo.Name">
            <summary>
            The name of the Reagent
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TradeSkillFrame.ReagentInfo.Texture">
            <summary>
            The Texture file used for the Reagent
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TradeSkillFrame.ReagentInfo.Needed">
            <summary>
            The number of this Reagent needed to create this item
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TradeSkillFrame.ReagentInfo.OnHand">
            <summary>
            The number of this Reagent that is currently in inventory
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.TradeSkillFrame.RecipeInfo">
            <summary>
            Class for returning Recipe information for a current recipe
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TradeSkillFrame.RecipeInfo.Empty">
            <summary>
            Returns an empty RecipeInfo object
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TradeSkillFrame.RecipeInfo.Collapse">
            <summary>
            Collapses the current item if it is a header or subclass row
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TradeSkillFrame.RecipeInfo.Exists">
            <summary>
            Returns true if this Recipe exists, false otherwise
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TradeSkillFrame.RecipeInfo.Expand">
            <summary>
            Expands the current item if it is a header
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TradeSkillFrame.RecipeInfo.Make(System.UInt32)">
            <summary>
            Attempts to create this recipe index a specified number of times (Qty)
            </summary>
            <param name="Qty">The number of times to create this recipe</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TradeSkillFrame.RecipeInfo.Make">
            <summary>
            Makes this recipie, attempting to create the item
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TradeSkillFrame.RecipeInfo.ReagentItem(System.UInt32)">
            <summary>
            Returns the Nth Reagent in a ReagentInfo object
            </summary>
            <param name="Nth">The Reagent to return info on (1-based)</param>
            <returns>Name and Texture are empty strings and needed/onhand are -1 if not found</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TradeSkillFrame.RecipeInfo.ReagentItem(System.String)">
            <summary>
            Get a reagent item by name, returning a ReagentInfo object (might be empty if it doesn't exist)
            </summary>
            <param name="ReagentName">The name of the reagent you want to return info about</param>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TradeSkillFrame.RecipeInfo.Name">
            <summary>
            The name of the Recipe or header
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TradeSkillFrame.RecipeInfo.Difficulty">
            <summary>
            Related to the color of the skill in the tradeskill window, headers are included here.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TradeSkillFrame.RecipeInfo.Available">
            <summary>
            Returns the number of times the particular recipe can be crafted with current reagent counts in inventory
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TradeSkillFrame.RecipeInfo.IsExpanded">
            <summary>
            Returns true if it is a header and it is currently expanded
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TradeSkillFrame.RecipeInfo.IsHeader">
            <summary>
            Returns true if the current trade skill selection is a header
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TradeSkillFrame.RecipeInfo.ReagentCount">
            <summary>
            The count of total unique reagents used in this recipie
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.TradeSkillFrame.TradeSkillTypes">
            <summary>
            Enum for each type of tradeskill
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.TradeSkillFrame.TradeSkillTypes.EMPTY">
            <summary>
            No current tradeskill
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.TradeSkillFrame.TradeSkillTypes.Alchemy">
            <summary>
            Alchemy
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.TradeSkillFrame.TradeSkillTypes.Blacksmithing">
            <summary>
            Blacksmithing
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.TradeSkillFrame.TradeSkillTypes.Cooking">
            <summary>
            Cooking
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.TradeSkillFrame.TradeSkillTypes.Enchanting">
            <summary>
            Enchanting
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.TradeSkillFrame.TradeSkillTypes.Engineering">
            <summary>
            Engineering
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.TradeSkillFrame.TradeSkillTypes.FirstAid">
            <summary>
            First Aid
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.TradeSkillFrame.TradeSkillTypes.Herbalism">
            <summary>
            Herbalism
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.TradeSkillFrame.TradeSkillTypes.Jewelcrafting">
            <summary>
            Jewelcrafting
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.TradeSkillFrame.TradeSkillTypes.Leatherworking">
            <summary>
            Leatherworking
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.TradeSkillFrame.TradeSkillTypes.Mining">
            <summary>
            Mining
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.TradeSkillFrame.TradeSkillTypes.Poisons">
            <summary>
            Poisons
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.TradeSkillFrame.TradeSkillTypes.Skinning">
            <summary>
            Skinning
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Frames.TradeSkillFrame.TradeSkillTypes.Tailoring">
            <summary>
            Tailoring
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.TermsOfService">
            <summary>
            The frame used for accepting the ToS and EULA
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.TermsOfService.#ctor">
            <summary>
            Internal constructor to expose an instance of this class
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TermsOfService.Accept">
            <summary>
            The Accept button on the TOS frame
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.TermsOfService.Decline">
            <summary>
            The decline button on the TOS frame
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.StaticPopup1">
            <summary>
            Found examlpes of when this box is used: When waiting to logout or exit
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.StaticPopup1.#ctor">
            <summary>
            Internal constructor for this popup
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.StaticPopup1.DefaultButton">
            <summary>
            The first button of the popup dialog, assumed to be the "OK" type button if there are 1 or more options.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.StaticPopup1.SecondaryButton">
            <summary>
            The second button of the popup dialog if the user has 2 options to choose from.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.StaticPopup1.Text">
            <summary>
            Returns the text of the popup
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.QuestUI">
            <summary>
            Represents the QuestUI frame
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestUI.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestUI.AcceptQuest">
            <summary>
            Accepts a quest.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestUI.ActiveLevel(System.Int32)">
            <summary>
            Returns the level of a quest that is active.
            </summary>
            <param name="index">Index of quest.</param>
            <returns>int</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestUI.ActiveTitle(System.Int32)">
            <summary>
            Returns the title of a quest that is active.
            </summary>
            <param name="index">Index of quest.</param>
            <returns>string</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestUI.AvailableLevel(System.Int32)">
            <summary>
            Returns the level of a quest this is available.
            </summary>
            <param name="index">Index of quest.</param>
            <returns>int</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestUI.AvailableTitle(System.Int32)">
            <summary>
            Returns the title of a quest that is available.
            </summary>
            <param name="index">Index of quest.</param>
            <returns>string</returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestUI.AddQuestWatchList(System.Int32)">
            <summary>
            Adds a quest to the watch list.
            </summary>
            <param name="index">Index of quest in log.</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestUI.CloseQuest">
            <summary>
            Closes quest window.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestUI.CompleteQuest">
            <summary>
            Completes a quest. This is current broken
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestUI.CompleteQuest(System.Int32)">
            <summary>
            Completes a quest and accepts a reward.
            </summary>
            <param name="rewardIndex">Index of reward to accept.</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestUI.ConfirmAcceptQuest">
            <summary>
            Confirm accepting the quest.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestUI.DeclineQuest">
            <summary>
            Decline the quest.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestUI.GetItemInfo(ISXWoW.WoWUI.Frames.QuestItemType,System.Int32)">
            <summary>
            Gets item info about a particular item for a quest in the gossip window.
            </summary>
            <param name="itemType">Type of item.</param>
            <param name="index">Index of item.</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestUI.Toggle">
            <summary>
            Toggles the quest log.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestUI.GetButtonForQuestRewardItem(System.Int32)">
            <summary>
            Gets the Nth QuestRewardItem as a button
            </summary>
            <param name="Nth"></param>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestUI.GreetingText">
            <summary>
            Returns the quest greeting text of the quest currently opened with a NPC.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestUI.ObjectiveText">
            <summary>
            Returns the quest objective text of the quest currently opened with a NPC.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestUI.ProgressText">
            <summary>
            Returns the quest progress text of the quest currently opened with a NPC.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestUI.QuestText">
            <summary>
            Returns the quest body text of the quest currently opened with a NPC.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestUI.RewardChoiceCount">
            <summary>
            Returns the amount of reward choices avilalbe for the currently open quest.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestUI.RewardCount">
            <summary>
            Gets the number of rewards for the the currently open quest
            NOTE: This is rewards you don't have a choice to accept, they are not choices
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestUI.RewardMoney">
            <summary>
            Returns the amount of money rewarded for the quest currently opened with a NPC.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestUI.RewardText">
            <summary>
            Returns the reward text of the quest currently opened with a NPC.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestUI.Title">
            <summary>
            Returns the title of the quest currently opened with a NPC.
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestUI.NpcName">
            <summary>
            Returns the NPC name in the portrait of the quest frame
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestUI.RewardCompleteQuestButton">
            <summary>
            The Complete button when there is a quest reward (I believe)
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestUI.AcceptQuestButton">
            <summary>
            The Accept Quest button on the quest frame blizzards default frame makes a call to AcceptQuest() when 
            this button is clicked
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestUI.CloseButton">
            <summary>
            The Close button on the quest frame
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestUI.CancelButton">
            <summary>
            The Cancel button on the quest frame
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestUI.ProgressCompleteButton">
            <summary>
            The Complete button when there is no reward or when you click on "continue" before completing the quest
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestUI.GoodbyeButton">
            <summary>
            The Goodbye button on the quest frame, blizzards default frame makes a call to DeclineQuest() when 
            this button is clicked
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestUI.DeclineButton">
            <summary>
            The Decline button on the quest frame, blizzards default frame makes a call to DeclineQuest() when 
            this button is clicked
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Frames.QuestUI.QuestGreetingPanel">
            <summary>
            The QuestGreetingPanel is sometimes displayed inside the quest frame to show multiple quests that can be excepted.
            I believe this is used when this NPC has multiple quests, no gossip options, and doesn't complete any quests
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestUI.QuestGreetingPanel.GetQuestTitleButton(System.Int32)">
            <summary>
            Gets the Nth QuestTitleButton, this is used only when GreetinPanel is visible
            </summary>
            <param name="Nth"></param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestUI.QuestGreetingPanel.SelectActiveQuest(System.Int32)">
            <summary>
            Selects an active quest from the NPC, this is used only when GreetinPanel is visible
            </summary>
            <param name="Nth">The Nth one to select</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Frames.QuestUI.QuestGreetingPanel.SelectAvailableQuest(System.Int32)">
            <summary>
            Selects an available quest from the NPC, this is used only when GreetinPanel is visible
            </summary>
            <param name="Nth">The Nth one to select</param>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestUI.QuestGreetingPanel.GetNumAvailableQuests">
            <summary>
            Returns the number of Available quest options, this value persists until the next greetingpanel is shown
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Frames.QuestUI.QuestGreetingPanel.GetNumActiveQuests">
            <summary>
            Returns the number of Active quest options, this persists until the next greetingpanel is shown
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Cursor">
            <summary>
            Cursor utilities, using lua functions.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.#ctor">
            <summary>
            Internal constructor for the cursor
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.AutoEquipItem">
            <summary>
            Causes the equipment on the cursor to be equipped
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.Clear">
            <summary>
            Clears whatever item the cursor is dragging from the cursor
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.DeleteItem">
            <summary>
            Deletes the item on the cursor
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.DropMoney">
            <summary>
            Drops the amount of money held by the cursor. 
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.DropItemOnUnit(System.String)">
            <summary>
            Drops an item from the cursor onto a unit. 
            </summary>
            <param name="UnitID">The unit to drop the item onto, see http://www.wowwiki.com/UnitId </param>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.EquipItem(ISXWoW.WoWEquipSlot)">
            <summary>
            Equips a cursor item to the supplied slot
            </summary>
            <param name="slot"></param>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.HideRepairCursor">
            <summary>
            Hides the repair cursor
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.PickupAction(System.UInt32)">
            <summary>
            Drags an action out of the specified quickbar slot and holds it on the cursor
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.PickupBag(System.UInt32)">
            <summary>
            Picks up the bag from the specified slot, placing it in the cursor. If an item is already picked up, this places the item into the specified slot, swapping the items if needed. 
            </summary>
            <param name="slot">The actionbar slot to perform the operation</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.PickupContainerItem(System.Int32,System.Int32)">
            <summary>
            Picks up an item in a bag. The functionality varies depending on what else is going on in the UI.
            For more details, read over http://www.wowwiki.com/API_PickupContainerItem
            </summary>
            <param name="bagID">Id of the bag the slot is located in, helpful info located here http://www.wowwiki.com/API_TYPE_bagID </param>
            <param name="slot">slot inside the bag (top left slot is 1, slot to the right of it is 2)</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.PickupInventoryItem(ISXWoW.WoWEquipSlot)">
            <summary>
            "Picks up" an item from the player's worn inventory.
            </summary>
            <param name="slot">The WoWEquipSlot item to pickup</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.PickupMacro(System.UInt32)">
            <summary>
            Pickup a macro button icon
            </summary>
            <param name="index">the macro index</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.PickupMerchantItem(System.UInt32)">
            <summary>
            Places the item on the cursor
            </summary>
            <param name="index">The merchant item index to pickup</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.PickupPetAction(System.UInt32)">
            <summary>
            Drags an action from the specified pet action bar slot into the cursor
            </summary>
            <param name="slot"></param>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.PickupPlayerMoney">
            <summary>
            Picks up an amount of money from the player
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.PickupSpell(System.UInt32,System.String)">
            <summary>
            Loads an action button onto the cursor to be dropped into a quickbar slot
            </summary>
            <param name="spellid">the spell id to pickup</param>
            <param name="booktype">the booktype, I believe it is "pet" or "spell", maybe others. Unsure.</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.PickupStablePet(System.UInt32)">
            <summary>
            ?
            </summary>
            <param name="index">the index of the stable pet to pickup</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.PickupTradeMoney(System.UInt32)">
            <summary>
            Picks up money to trade
            </summary>
            <param name="amount">The amount to pickup, in copper</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.PlaceAction(System.UInt32)">
            <summary>
            Drops an action from the cursor into the specified quickbar slot. 
            </summary>
            <param name="slot">The actionbar slot to place it</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.PutItemInBackpack">
            <summary>
            attempts to place item in backpack (bag slot 0)
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.PutItemInBag(System.UInt32)">
            <summary>
            attempts to place item in a specific bag
            </summary>
            <param name="bagid">The id of the bag to put the item in</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.Reset">
            <summary>
            No idea
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.Set(System.String)">
            <summary>
            No idea, see http://www.wowwiki.com/API_SetCursor
            </summary>
            <param name="setoption">a cursor set option string, see http://www.wowwiki.com/API_SetCursor </param>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.ShowContainerSell(System.UInt32,System.UInt32)">
            <summary>
            No idea, enjoy
            </summary>
            <param name="index">The index for whatever this does</param>
            <param name="slot">The slot for whatever this does</param>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.ShowInspect">
            <summary>
            Change the cursor to the magnifying glass inventory inspection cursor 
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.ShowInventorySell">
            <summary>
            No idea, enjoy
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.ShowMerchantSell(System.UInt32)">
            <summary>
            Changes the cursor to the merchant sell cursor
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.ShowRepair">
            <summary>
            Changes the cursor to Repair Mode. Use HideRepairCursor to go back. 
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Cursor.CanGoInSlot">
            <summary>
            Return true if the item currently held by the cursor can go into the given inventory , otherwise false
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Cursor.GetMoney">
            <summary>
            Returns the amount of money held by the cursor, in copper
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Cursor.HasItem">
            <summary>
            Returns true if the cursor currently holds an item, otherwise false
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Cursor.HasMoney">
            <summary>
            Returns true if the cursor holds coin, otherwise false
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Cursor.InRepairMode">
            <summary>
            Returns true if your cursor is in repair mode
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Cursor.Position">
            <summary>
            Returns the cursor's position on the screen, otherwise 0,0
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.Cursor.CursorPoint">
            <summary>
            Custom point object for taxi node points
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Cursor.CursorPoint._X">
            <summary>
            The X value of the taxi point
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.Cursor.CursorPoint._Y">
            <summary>
            The Y value of the taxis point
            </summary>
        </member>
        <member name="M:ISXWoW.WoWUI.Cursor.CursorPoint.#ctor(System.Int32,System.Int32)">
            <summary>
            Internal constructor for our custom taxi node point object
            </summary>
            <param name="x">The X value to use for the point</param>
            <param name="y">The Y value to use for the point</param>
        </member>
        <member name="P:ISXWoW.WoWUI.Cursor.CursorPoint.X">
            <summary>
            Returns the X value of this point
            </summary>
        </member>
        <member name="P:ISXWoW.WoWUI.Cursor.CursorPoint.Y">
            <summary>
            Returns the Y value of this point
            </summary>
        </member>
        <member name="T:ISXWoW.WoWUI.AnchorTypes">
            <summary>
            Tooltip position types
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.AnchorTypes.ANCHOR_NONE">
            <summary>
            Anchors none
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.AnchorTypes.ANCHOR_BOTTOMLEFT">
            <summary>
            Anchors to the bottom left
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.AnchorTypes.ANCHOR_RIGHT">
            <summary>
            Anchors to the right
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.AnchorTypes.ANCHOR_TOPRIGHT">
            <summary>
            Anchors to the top right
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.AnchorTypes.ANCHOR_BOTTOMRIGHT">
            <summary>
            Anchors to the bottom right
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.AnchorTypes.ANCHOR_TOPLEFT">
            <summary>
            Anchors to the top left
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.AnchorTypes.ANCHOR_LEFT">
            <summary>
            Anchors to the left
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.AnchorTypes.ANCHOR_CURSOR">
            <summary>
            Anchors to the cursor
            </summary>
        </member>
        <member name="F:ISXWoW.WoWUI.AnchorTypes.ANCHOR_PRESERVE">
            <summary>
            Preserves the current anchor
            </summary>
        </member>
        <member name="T:ISXWoW.WoWActivePlayer">
            <summary>
            Also known as "Me"
            </summary>
        </member>
        <member name="M:ISXWoW.WoWActivePlayer.#ctor">
            <summary>
            Constructor, gets the 'Me' object from lavishscript
            </summary>
        </member>
        <member name="M:ISXWoW.WoWActivePlayer.#ctor(LavishScriptAPI.LavishScriptPersistentObject)">
            <summary>
            Constructor, gets a persistent object from lavishscript, if for some reason the default isn't good enough
            </summary>
        </member>
        <member name="M:ISXWoW.WoWActivePlayer.Get(System.String[])">
            <summary>
            Not used. Hidden because it is contained in object
            </summary>
            <param name="search">search params</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWActivePlayer.Get">
            <summary>
            Gets a new 'Me' object. This is the prefered method to use
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWActivePlayer.Action(System.String[])">
            <summary>
            Used to find something on your action bar
            </summary>
            <param name="Action">The action search string to use (i.e. spell name)</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWActivePlayer.Bag(System.Int32)">
            <summary>
            Returns a WoWContainer object used for bag type operations
            </summary>
            <param name="number">the Nth bag 0-5</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWActivePlayer.Equip(ISXWoW.WoWEquipSlot)">
            <summary>
            Returns a WoWItem object for something on your character sheet
            </summary>
            <param name="slot">A WoWEquipSlot you want to retrieve</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWActivePlayer.Equip(System.Int32)">
            <summary>
            Returns a WoWItem object for something on your character sheet
            </summary>
            <param name="slot">The slot number you want to retrieve</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWActivePlayer.Sit">
            <summary>
            Instructs your character to sit
            </summary>
        </member>
        <member name="M:ISXWoW.WoWActivePlayer.HasSpell(System.Int32)">
            <summary>
            Determines if your character has a given spell, by spell ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWActivePlayer.Skill(System.Int32)">
            <summary>
            Returns the skill level of a skill, by id
            </summary>
            <param name="id">The id of the skill to retrieve</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWActivePlayer.Skill(System.String)">
            <summary>
            Returns the skill level of a skill, by name. This is the prefered lookup method.
            </summary>
            <param name="name">The skill name to lookup the level for. (i.e. Leatherworking, Combat,Guns,Maces, etc)</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWActivePlayer.Stand">
            <summary>
            Instructs your character to stand
            </summary>
        </member>
        <member name="M:ISXWoW.WoWActivePlayer.Quest(System.String[])">
            <summary>
            Attempts to return a WoWQuest object specifed by the search params (this is only for quests already in your log)
            </summary>
            
        </member>
        <member name="M:ISXWoW.WoWActivePlayer.ToggleAttack">
            <summary>
            If attack is on, turn it off. Otherwise, turn it on.
            </summary>
        </member>
        <member name="M:ISXWoW.WoWActivePlayer.WillCollide(System.Double,System.Double,System.Double)">
            <summary>
            Returns true if at your current heading you will pass within 'radius' of the point specified by 'x','y' 
            </summary>
            <param name="x">The X of what you want to check</param>
            <param name="y">The Y of what you want to check</param>
            <param name="radius">The distance around the supplied X/Y that you want to see if you will collide with</param>
            <returns></returns>
        </member>
        <member name="M:ISXWoW.WoWActivePlayer.WillCollide(System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            Returns true if at your current heading you will pass within 'radius' of the point specified by 'x','y' 
            </summary>
            <param name="degrees">No idea</param>
            <param name="x">The X of what you want to check</param>
            <param name="y">The Y of what you want to check</param>
            <param name="radius">The distance around the supplied X/Y that you want to see if you will collide with</param>
            <returns></returns>
        </member>
        <member name="P:ISXWoW.WoWActivePlayer.Attacking">
            <summary>
            Returns true if you are currently attacking. The same as the two swords blinking in your player portrait, otherwise false
            </summary>
        </member>
        <member name="P:ISXWoW.WoWActivePlayer.AutoFollowing">
            <summary>
            Returns true if you are currently /follow on someone, otherwise false
            </summary>
        </member>
        <member name="P:ISXWoW.WoWActivePlayer.BlockPercent">
            <summary>
            Returns the percent chance you will block damage
            </summary>
        </member>
        <member name="P:ISXWoW.WoWActivePlayer.ComboPoints">
            <summary>
            Returns the number of combopoints you have
            </summary>
        </member>
        <member name="P:ISXWoW.WoWActivePlayer.Copper">
            <summary>
            Returns the amout of money you have, in copper
            </summary>
        </member>
        <member name="P:ISXWoW.WoWActivePlayer.Corpse">
            <summary>
            Returns a point3f of your corpses location
            </summary>
        </member>
        <member name="P:ISXWoW.WoWActivePlayer.CritPercent">
            <summary>
            Returns the percent chance you have crit in melee combat
            </summary>
        </member>
        <member name="P:ISXWoW.WoWActivePlayer.DodgePercent">
            <summary>
            Returns the percent chance you to dodge damage
            </summary>
        </member>
        <member name="P:ISXWoW.WoWActivePlayer.EmptyInventorySlots">
            <summary>
            Returns the number of empty inventory slots your character has
            </summary>
        </member>
        <member name="P:ISXWoW.WoWActivePlayer.Exp">
            <summary>
            Returns the amount of experience you have gained in the current level
            </summary>
        </member>
        <member name="P:ISXWoW.WoWActivePlayer.FilledInventorySlots">
            <summary>
            Returns the number of inventory slots that are not empty
            </summary>
        </member>
        <member name="P:ISXWoW.WoWActivePlayer.GlobalCooldown">
            <summary>
            Milliseconds remaining in Global Cooldown
            </summary>
        </member>
        <member name="P:ISXWoW.WoWActivePlayer.HoldingBreath">
            <summary>
            Returns true if you are under water and holding your breath (The bar is ticking down)
            </summary>
        </member>
        <member name="P:ISXWoW.WoWActivePlayer.InteractTarget">
            <summary>
            Current interaction target -- trade window, merchant window, etc
            </summary>
        </member>
        <member name="P:ISXWoW.WoWActivePlayer.IsCasting">
            <summary>
            Returns true if currently casting a spell
            </summary>
        </member>
        <member name="P:ISXWoW.WoWActivePlayer.IsInCombat">
            <summary>
            Returns true if you are currently in combat (There are mobs that have you on their agro list)
            </summary>
        </member>
        <member name="P:ISXWoW.WoWActivePlayer.NextLevelExp">
            <summary>
            Returns the total experience that must be gained for this level (From 0 in the level to complete)
            </summary>
        </member>
        <member name="P:ISXWoW.WoWActivePlayer.ParryPercent">
            <summary>
            Returns the percent chance you have to parray damage
            </summary>
        </member>
        <member name="P:ISXWoW.WoWActivePlayer.RestedExp">
            <summary>
            Returns the amount of experince you have left rested
            </summary>
        </member>
        <member name="P:ISXWoW.WoWActivePlayer.RestedExpRate">
            <summary>
            No idea
            </summary>
        </member>
        <member name="P:ISXWoW.WoWActivePlayer.Spells">
            <summary>
            Returns the count of spells in your spellbook
            </summary>
        </member>
        <member name="P:ISXWoW.WoWActivePlayer.TotalInventorySlots">
            <summary>
            Returns the total number of inventory slots the character has
            </summary>
        </member>
    </members>
</doc>
